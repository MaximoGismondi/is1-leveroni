

----STARTUP---- (18 March 2024 23:47:48) as G:\is1-leveroni\cuis\windows64\CuisUniversity-6169.image!


----End fileIn of \is1-leveroni\forms\forms1-2-3.st----!
!AlanKay class methodsFor: '-- all --' stamp: 'mg 3/18/2024 23:52:56'!
esMayorQue: unaPersona
	| diferenciaDeEdad |
	diferenciaDeEdad := self fechaDeNacimiento distanceTo: unaPersona fechaDeNacimiento.
	^diferenciaDeEdad positive! !

!classDefinition: 'AdeleGoldberg class' category: #Form2 stamp: 'mg 3/18/2024 23:57:25'!
AdeleGoldberg class
	instanceVariableNames: 'colegaDeTrabajo'!
!AdeleGoldberg class methodsFor: '-- all --' stamp: 'mg 3/18/2024 23:59:38'!
esMenorQueSuColega
    ^colegaDeTrabajo esMayorQue: self! !

AdeleGoldberg  esMenorQueSuColega !
!AdeleGoldberg class methodsFor: '-- all --' stamp: 'mg 3/19/2024 00:01:56'!
colegaDeTrabajo
     ^colegaDeTrabajo! !

AdeleGoldberg colegaDeTrabajo!
!AdeleGoldberg class methodsFor: '--** private fileout/in **--' stamp: 'mg 3/19/2024 00:13:58' overrides: 50513977!
initializeCollaboratorsFromFile
	"Auto generated method for loading purposes - Do not modify it"

	colegaDeTrabajo := AlanKay.! !

!methodRemoval: AdeleGoldberg class #initializeCollaboratorsFromFile stamp: 'mg 3/19/2024 00:13:58'!
initializeCollaboratorsFromFile
	"Auto generated method for loading purposes - Do not modify it"

	colegaDeTrabajo := AlanKay.!

‘Hola’ size.!

‘Hola’ size.!

‘Hola’ size.!

100 factorial !

'Hola'!

'Hola' size!

100 factorial. !

'hola' size even.!

'hola' size odd.!

10 + 20.!

true & false.!

‘Hola’ at: 1.!

'Hola' at: 1.!


3 between: 1 and: 5.
Array with: 1 with: 10 with: 100.
'Hola gente!!' copyFrom: 2 to: 8.!

March distanceTo: December.!

March distanceTo: December. 9 * months .!

9 * months .!

3 between: 1 and: 5.!

Array with: 1 with: 10 with: 100.!

3 between: 1 and: 5.!

'Hola' size + 'Chau' size.!

'hola', 'chau'.!

'hola', 'chau'. 'holachau' .!

'hola', 'chau' size.!

'hola', 'chau' size.!

'hola', 'chau'.!

'hola', 'chau' size.!

'hola gente!!' copyFrom: 'hola' size + 1 to: 11.!

('hola', 'chau') size.!

'hola' size next!

'hola' size!

4 nextObject !

4 nextInstance !

4 size!

'hola' size even!

6+2*5.!

(6+2)*5.!

hola!

AlanTuring hola.!
!AlanTuring class methodsFor: '-- all --' stamp: 'mg 3/19/2024 00:32:37' overrides: 50514465!
doesNotUnderstand: aMessage
	^'No entiendo lo que me decis con ', aMessage asString! !

AlanTuring hola.!

AlanTuring  chau!

AlanTuring  doesNotUnderstand!

AlanTuring  doesNotUnderstand: aaa!

AlanTuring  doesNotUnderstand: hola!

AlanTuring  doesNotUnderstand: hola asMessage!

AlanTuring  doesNotUnderstand: #hola!

AlanTuring  hola!

AlanTuring  hola!

AlanTuring  hola!
!AdeleGoldberg class methodsFor: '--** private fileout/in **--' stamp: 'mg 3/19/2024 00:39:27' overrides: 50513977!
initializeCollaboratorsFromFile
	"Auto generated method for loading purposes - Do not modify it"

	colegaDeTrabajo := AlanKay.! !

!methodRemoval: AdeleGoldberg class #initializeCollaboratorsFromFile stamp: 'mg 3/19/2024 00:39:27'!
initializeCollaboratorsFromFile
	"Auto generated method for loading purposes - Do not modify it"

	colegaDeTrabajo := AlanKay.!

DenotativeObject subclass: #CloneOfJohnVonNeumann
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Form5'!

!classDefinition: #CloneOfJohnVonNeumann category: 'Form5' stamp: 'mg 3/19/2024 01:06:05'!
DenotativeObject subclass: #CloneOfJohnVonNeumann
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Form5'!

CloneOfJohnVonNeumann class
	instanceVariableNames: ''!

!classDefinition: 'CloneOfJohnVonNeumann class' category: 'Form5' stamp: 'mg 3/19/2024 01:06:05'!
CloneOfJohnVonNeumann class
	instanceVariableNames: ''!
!CloneOfJohnVonNeumann class methodsFor: '-- all --' stamp: 'mg 3/19/2024 01:06:05'!
fechaDeNacimiento
	^December/28/1903! !

(June/23/2019) = (June/23/2019).!

(June/23/2019) == (June/23/2019).!

100 factorial = 100 factorial.!

100 factorial == 100 factorial.!

('ho','la') = ('ho','la').  !

('ho','la') == ('ho', 'la').!
!AdeleGoldberg class methodsFor: '--** private fileout/in **--' stamp: 'mg 3/19/2024 01:09:39' overrides: 50513977!
initializeCollaboratorsFromFile
	"Auto generated method for loading purposes - Do not modify it"

	colegaDeTrabajo := AlanKay.! !

!methodRemoval: AdeleGoldberg class #initializeCollaboratorsFromFile stamp: 'mg 3/19/2024 01:09:39'!
initializeCollaboratorsFromFile
	"Auto generated method for loading purposes - Do not modify it"

	colegaDeTrabajo := AlanKay.!

#messageList!

self messageList!

#messageList size!

list!

list size!

self selection: #fail.!

self setSelectionIndex: 1.!

self setSelectionIndex: 1.!

self setSelectionIndex: 1.!

self setSelectionIndex: 3.!

self setSelectionIndex: 1. true .!

self setSelectionIndex: 3. true .!

self selection: #fail.!

self!

self browse !

self !

DenotativeObject Browser list!

self send.!

self send. !

self send.!

self send.!

self send.!

self send.!

self send.!

self send.!

self send.!

self send.!

self send.!

self send.!

self send.!

AlanKay  esMayorQue:  JohnVonNeumann !
!AdeleGoldberg class methodsFor: '--** private fileout/in **--' stamp: 'mg 3/19/2024 01:29:50' overrides: 50513977!
initializeCollaboratorsFromFile
	"Auto generated method for loading purposes - Do not modify it"

	colegaDeTrabajo := AlanKay.! !

!methodRemoval: AdeleGoldberg class #initializeCollaboratorsFromFile stamp: 'mg 3/19/2024 01:29:50'!
initializeCollaboratorsFromFile
	"Auto generated method for loading purposes - Do not modify it"

	colegaDeTrabajo := AlanKay.!

10 factorial.!

[ 10 factorial ].!

[ 10 factorial ] value.!

[ :anInteger | anInteger factorial ] value: 10.!

[ :anInteger | anInteger factorial ] value: 100.!

factorialBlock := [ :anInteger | anInteger factorial ].!

factorialBlock value: 10.!

factorialSumBlock := [ :anIntegerToFact1 :anIntegerToFact2 | anIntegerToFact1 factorial + anIntegerToFact2 factorial ].!

factorialSumBlock value: 10 value: 20.!

factorialSumBlock valueWithArguments: #(10 20)!

plusTenByTwentyBlock := [ :anAdder | 	| anAdderPlusTen | anAdderPlusTen := anAdder + 10. anAdderPlusTen * 20 ].!

plusTenByTwentyBlock value: 5.!

plusTenByTwentyBlock value: 100.!

sum := 0.!

5 timesRepeat: [ sum := sum + 10 ].!

sum.!

sum := 0.!

sum. 50 .!

[ sum < 50 ] whileTrue: [ sum := sum + 10 ].!

sum.!

10 > 5 ifTrue: [ 'Si!! Diez es mayor a cinco' ] ifFalse: [ 'No, no lo es' ].!

sum := 0.!

#(1 2 3 4 5) do: [ :anInteger | sum := sum + anInteger ].!

sum!

#(1 2 3 4 5) inject: 0 into: [ :acum :anInteger | acum + anInteger ]!
!AdeleGoldberg class methodsFor: '--** private fileout/in **--' stamp: 'mg 3/19/2024 01:44:39' overrides: 50513977!
initializeCollaboratorsFromFile
	"Auto generated method for loading purposes - Do not modify it"

	colegaDeTrabajo := AlanKay.! !

!methodRemoval: AdeleGoldberg class #initializeCollaboratorsFromFile stamp: 'mg 3/19/2024 01:44:39'!
initializeCollaboratorsFromFile
	"Auto generated method for loading purposes - Do not modify it"

	colegaDeTrabajo := AlanKay.!

----SNAPSHOT----(19 March 2024 01:44:43) CuisUniversity-6169.image priorSource: 6245038!

----QUIT----(19 March 2024 01:44:49) CuisUniversity-6169.image priorSource: 6255303!

----STARTUP---- (21 March 2024 00:03:06) as C:\GITHUB\is1-leveroni\cuis\windows64\CuisUniversity-6169.image!


----End fileIn of \GITHUB\is1-leveroni\forms\form8.st----!

!classDefinition: #Eminencia category: #AprendiendoObjetosConClases stamp: 'mg 3/21/2024 00:05:07'!
Object subclass: #Eminencia
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'AprendiendoObjetosConClases'!
!Eminencia methodsFor: '-- all --' stamp: 'mg 3/21/2024 00:05:07'!
esMayorQue: unaPersona
	| diferenciaDeEdad |
	diferenciaDeEdad := self fechaDeNacimiento distanceTo: unaPersona fechaDeNacimiento.
	^diferenciaDeEdad positive! !
!Eminencia methodsFor: '-- all --' stamp: 'mg 3/21/2024 00:05:07'!
fechaDeNacimiento
	^May/17/1940! !

alanKay := Eminencia new!

alanKay!

new!

Eminencia!

Eminencia!

this new!

adeleGoldberg := Eminencia new!

1!

self fechaDeNacimiento!

self fechaDeNacimiento!

!classDefinition: #Eminencia category: #AprendiendoObjetosConClases stamp: 'mg 3/21/2024 00:15:57'!
Object subclass: #Eminencia
	instanceVariableNames: 'fechaDeNacimiento'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'AprendiendoObjetosConClases'!
!Eminencia methodsFor: '-- all --' stamp: 'mg 3/21/2024 00:15:54' prior: 50527001!
fechaDeNacimiento
    ^fechaDeNacimiento! !

!classDefinition: #Eminencia category: #AprendiendoObjetosConClases stamp: 'mg 3/21/2024 00:16:32'!
Object subclass: #Eminencia
	instanceVariableNames: 'fechaDeNacimiento nombre'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'AprendiendoObjetosConClases'!
!Eminencia methodsFor: 'nil' stamp: 'mg 3/21/2024 00:16:44' overrides: 16932297!
initialize

    nombre := 'Alan Kay'.
    fechaDeNacimiento := May/17/1940! !

alanKay := Eminencia new.!

alanKay := Eminencia new.!

basicNew!

basicNew!
!Eminencia methodsFor: 'nil' stamp: 'mg 3/21/2024 00:22:03'!
inicializarCon: unNombre y: unaFechaDeNacimiento

    nombre := unNombre.
    fechaDeNacimiento := unaFechaDeNacimiento.! !

adeleGoldberg := Eminencia new inicializarCon: 'Adele Goldberg' y: July/22/1945!
!Eminencia class methodsFor: 'nil' stamp: 'mg 3/21/2024 00:24:47'!
llamada: unNombre nacidaEl: unaFecha

	^self new inicializarCon: unNombre y: unaFecha! !

Eminencia llamada: 'Alan Kay' nacidaEl: May/17/1940!

Eminencia llamada: 'Alan Kay' nacidaEl: May/17/1940!

Eminencia llamada: 'Alan Kay' nacidaEl: May/17/1940!

Object subclass: #Auto
	instanceVariableNames: 'fechaDeNacimiento nombre'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'AprendiendoObjetosConClases'!

!classDefinition: #Auto category: #AprendiendoObjetosConClases stamp: 'mg 3/21/2024 00:37:42'!
Object subclass: #Auto
	instanceVariableNames: 'fechaDeNacimiento nombre'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'AprendiendoObjetosConClases'!

Object subclass: #Auto
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'AprendiendoObjetosConClases'!

!classDefinition: #Auto category: #AprendiendoObjetosConClases stamp: 'mg 3/21/2024 00:37:49'!
Object subclass: #Auto
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'AprendiendoObjetosConClases'!
!Auto methodsFor: 'nil' stamp: 'mg 3/21/2024 00:38:45'!
abrirBaúl! !
!Auto methodsFor: 'as yet unclassified' stamp: 'mg 3/21/2024 00:38:55'!
cantidadDeRuedas
	^4! !

Object subclass: #Moto
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'AprendiendoObjetosConClases'!

!classDefinition: #Moto category: #AprendiendoObjetosConClases stamp: 'mg 3/21/2024 00:39:30'!
Object subclass: #Moto
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'AprendiendoObjetosConClases'!

Moto class
	instanceVariableNames: ''!

!classDefinition: 'Moto class' category: #AprendiendoObjetosConClases stamp: 'mg 3/21/2024 00:39:30'!
Moto class
	instanceVariableNames: ''!
!Moto methodsFor: 'as yet unclassified' stamp: 'mg 3/21/2024 00:39:30'!
abrirBaúl! !
!Moto methodsFor: 'as yet unclassified' stamp: 'mg 3/21/2024 00:39:30'!
cantidadDeRuedas
	^4! !
!Moto methodsFor: 'as yet unclassified' stamp: 'mg 3/21/2024 00:39:33' prior: 50527110!
cantidadDeRuedas
	^2! !

!classDefinition: #Vehículo category: #AprendiendoObjetosConClases stamp: 'mg 3/21/2024 00:40:07'!
Object subclass: #Vehículo
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'AprendiendoObjetosConClases'!

!classDefinition: #Auto category: #AprendiendoObjetosConClases stamp: 'mg 3/21/2024 00:40:07'!
Vehículo subclass: #Auto
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'AprendiendoObjetosConClases'!

Vehículo subclass: #Vehículo
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'AprendiendoObjetosConClases'!

Vehículo subclass: #Moto
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'AprendiendoObjetosConClases'!

!classDefinition: #Moto category: #AprendiendoObjetosConClases stamp: 'mg 3/21/2024 00:40:30'!
Vehículo subclass: #Moto
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'AprendiendoObjetosConClases'!

Vehículo subclasses!

!classDefinition: #Vehículo category: #AprendiendoObjetosConClases stamp: 'mg 3/21/2024 00:42:20'!
Object subclass: #Vehículo
	instanceVariableNames: 'combustible'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'AprendiendoObjetosConClases'!
!Vehículo methodsFor: 'nil' stamp: 'mg 3/21/2024 00:42:19'!
cargarCombustible: cantidadCombustibleACargar
	combustible := cantidadCombustibleACargar ! !

self cargarCombustible: 100!
!Vehículo methodsFor: 'nil' stamp: 'mg 3/21/2024 00:45:07'!
cantidadDeRuedas
	self subclassResponsibility! !

self subclassResponsability!

self subclassResponsability!

Vehículo  subclassResponsibility !

self subclassResponsability!

Vehículo subclassResponsability!

Vehículo subclassResponsability!

1 class.!

Number subclasses.!

Number allSubclasses. !

Integer superclass.!

Number allSubclasses.  !

Integer superclass. !

Number superclass!

Number superclass superclass !

Number superclass superclass  !

Number superclass superclass  superclass !

Number superclass superclass  superclass superclass.!

Number superclass superclass  superclass superclass superclass!

Object !

----STARTUP---- (22 March 2024 19:35:28) as C:\GITHUB\is1-leveroni\cuis\windows64\CuisUniversity-6169.image!


----End fileIn of C:\GITHUB\is1-leveroni\ejs\combatientes\Ejercicio01-codigoInicial.st----!

Object subclass: #CombateTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Ejercicio01'!

!classDefinition: #CombateTest category: #Ejercicio01 stamp: 'mg 3/22/2024 19:48:47'!
Object subclass: #CombateTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Ejercicio01'!

!classDefinition: #Combate category: #Ejercicio01 stamp: 'mg 3/22/2024 19:55:56'!
Object subclass: #Combate
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Ejercicio01'!
!CombateTest methodsFor: 'nil' stamp: 'mg 3/22/2024 19:55:44'!
test01_xxx
	|bando1 bando2 combate ganador|
	bando1 := {Combatiente new}.
	bando2 := {}.
	
	combate := Combate entre: bando1 y: bando2.
	ganador := combate xxx
	
	self assert:  ganador = bando1
	! !
!CombateTest methodsFor: 'as yet unclassified' stamp: 'mg 3/22/2024 19:56:34' prior: 50527463!
test01_xxx
	|bando1 bando2 combate ganador|
	bando1 := {Combatiente new}.
	bando2 := {}.
	
	combate := Combate entre: bando1 y: bando2.
	ganador := combate xxx
	
	^self assert:  ganador = bando1
	! !
!CombateTest methodsFor: 'as yet unclassified' stamp: 'mg 3/22/2024 19:57:13' prior: 50527473!
test01_xxx
	|bando1 bando2 combate ganador|
	bando1 := {Combatiente new}.
	bando2 := {}.
	
	combate := Combate entre: bando1 y: bando2.
	ganador := combate xxx.
	
	self assert:  ganador = bando1
	! !
!CombateTest methodsFor: 'as yet unclassified' stamp: 'mg 3/22/2024 19:57:24' prior: 50527483!
test01_xxx
	|bando1 bando2 combate ganador|
	bando1 := {Combatiente new}.
	bando2 := {}.
	
	combate := Combate entre: bando1 y: bando2.
	ganador := combate xxx.
	
	self assert:  (ganador = bando1)
	! !
!CombateTest methodsFor: 'as yet unclassified' stamp: 'mg 3/22/2024 19:57:27' prior: 50527493!
test01_xxx
	|bando1 bando2 combate ganador|
	bando1 := {Combatiente new}.
	bando2 := {}.
	
	combate := Combate entre: bando1 y: bando2.
	ganador := combate xxx.
	
	self assert:  ganador = bando1
	! !

!testRun: #CombatientesTest #test01PuedoDefinirleUnaEstrategiaADavid stamp: 'mg 3/22/2024 19:57:30'!
PASSED!

!testRun: #CombatientesTest #test01PuedoDefinirleUnaEstrategiaADavid stamp: 'mg 3/22/2024 19:57:30'!
PASSED!

!testRun: #CombatientesTest #test02EnfocarseEnElMasSanoAtacaAlMenosDañado stamp: 'mg 3/22/2024 19:57:30'!
PASSED!

!testRun: #CombatientesTest #test03EnfocarseEnElMasSanoAtacaAlMenosDañadoNoImportaElOrden stamp: 'mg 3/22/2024 19:57:30'!
PASSED!

!testRun: #CombatientesTest #test04EnfocarseEnElMasHeridoAtacaAlMasDañado stamp: 'mg 3/22/2024 19:57:30'!
PASSED!

!testRun: #CombatientesTest #test_01_GoliatEmpiezaSano stamp: 'mg 3/22/2024 19:57:30'!
PASSED!

!testRun: #CombatientesTest #test_02_GoliatNoEstaSanoSiRecibeDaño stamp: 'mg 3/22/2024 19:57:30'!
PASSED!

!testRun: #CombatientesTest #test_03_CuandoSeDañaAAlguienEsPorUnaCantidadDeDaño stamp: 'mg 3/22/2024 19:57:30'!
PASSED!

!testRun: #CombatientesTest #test_04_CuandoSeDañaAAlguienEsPorUnaCantidadDeDaño stamp: 'mg 3/22/2024 19:57:30'!
PASSED!

!testRun: #CombatientesTest #test_05_GoliatPuedeRecibirDañoMultiplesVeces stamp: 'mg 3/22/2024 19:57:30'!
PASSED!

!testRun: #CombatientesTest #test_06_DavidPuedeAtacarAAlguien stamp: 'mg 3/22/2024 19:57:30'!
PASSED!

!testRun: #CombatientesTest #test_07_DavidPuedeAtacarEnemigosAsignados stamp: 'mg 3/22/2024 19:57:30'!
PASSED!

!testRun: #CombatientesTest #test_08_DavidNoAtacaAUnEnemigoNoAsignado stamp: 'mg 3/22/2024 19:57:30'!
PASSED!
!CombateTest methodsFor: 'as yet unclassified' stamp: 'mg 3/22/2024 19:57:47' prior: 50527503!
test01_xxx
	|bando1 bando2 combate ganador|
	
	bando1 := {Combatiente new}.
	bando2 := {}.
	
	combate := Combate entre: bando1 y: bando2.
	ganador := combate xxx.
	
	self assert:  ganador = bando1
	! !
!CombateTest methodsFor: 'as yet unclassified' stamp: 'mg 3/22/2024 19:57:51' prior: 50527559!
test01_xxx
	|bando1 bando2 combate ganador|
	
	bando1 := {Combatiente new}.
	bando2 := {}.
	
	combate := Combate entre: bando1 y: bando2.
	ganador := combate xxx.
	
	self assert:  ganador = bando1.
	! !
!CombateTest methodsFor: 'as yet unclassified' stamp: 'mg 3/22/2024 19:58:17' prior: 50527569!
test01_xxx
	|bando1 bando2 combate ganador|
	
	bando1 := {Combatiente new}.
	bando2 := {}.
	
	combate := Combate entre: bando1 y: bando2.
	ganador := combate xxx.
	
	self assert:  ganador == bando1.
	! !
!CombateTest methodsFor: 'as yet unclassified' stamp: 'mg 3/22/2024 19:58:24' prior: 50527579!
test01_xxx
	|bando1 bando2 combate ganador|
	
	bando1 := {Combatiente new}.
	bando2 := {}.
	
	combate := Combate entre: bando1 y: bando2.
	ganador := combate xxx.
	
	self assert:  True
	! !
!CombateTest methodsFor: 'as yet unclassified' stamp: 'mg 3/22/2024 19:58:51' prior: 50527589!
test01_xxx

	|bando1 bando2 combate ganador|
	
	bando1 := {Combatiente new}.
	bando2 := {}.
	
	combate := Combate entre: bando1 y: bando2.
	ganador := combate xxx.
	
	self assert:  ganador = bando1.
	! !
!CombateTest methodsFor: 'as yet unclassified' stamp: 'mg 3/22/2024 19:59:33' prior: 50527598!
test01_xxx
	|bando1 bando2 combate ganador|
	
	bando1 := {Combatiente new}.
	bando2 := {}.
	
	combate := Combate entre: bando1 y: bando2.
	ganador := combate xxx.
	
	self assert:  ganador = bando1.
	! !

TestCase subclass: #CombateTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Ejercicio01'!

!classDefinition: #CombateTest category: #Ejercicio01 stamp: 'mg 3/22/2024 20:02:26'!
TestCase subclass: #CombateTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Ejercicio01'!

!testRun: #CombateTest #test01_xxx stamp: 'mg 3/22/2024 20:02:30'!
ERROR!
!Combate class methodsFor: 'instance creation' stamp: 'mg 3/22/2024 20:07:28'!
entre: bando1 y: bando2 
	"DO NOT FORGET TO RENAME COLLABORATORS AND REMOVE THIS COMMENT!!!!"
	self shouldBeImplemented.
	^self new initializeEntre: bando1 y: bando2 ! !
!Combate class methodsFor: 'instance creation' stamp: 'mg 3/22/2024 20:07:47' prior: 50527631!
entre: bando1 y: bando2 
	^self new initializeEntre: bando1 y: bando2 ! !

!testRun: #CombateTest #test01_xxx stamp: 'mg 3/22/2024 20:08:01'!
ERROR!

!testRun: #CombateTest #test01_xxx stamp: 'mg 3/22/2024 20:08:01'!
ERROR!

!classDefinition: #Combate category: #Ejercicio01 stamp: 'mg 3/22/2024 20:08:35'!
Object subclass: #Combate
	instanceVariableNames: 'bando1_CHANGE_ME'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Ejercicio01'!

!classDefinition: #Combate category: #Ejercicio01 stamp: 'mg 3/22/2024 20:08:35'!
Object subclass: #Combate
	instanceVariableNames: 'bando1_CHANGE_ME bando2_CHANGE_ME'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Ejercicio01'!
!Combate methodsFor: 'initialization' stamp: 'mg 3/22/2024 20:08:35'!
initializeEntre: bando1 y: bando2 
	self shouldBeImplemented.
	bando1_CHANGE_ME := bando1.
	bando2_CHANGE_ME := bando2.! !

Object subclass: #Combate
	instanceVariableNames: 'bando1 bando2'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Ejercicio01'!

Object subclass: #Combate
	instanceVariableNames: 'primerBando segundoBando'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Ejercicio01'!

!classDefinition: #Combate category: #Ejercicio01 stamp: 'mg 3/22/2024 20:11:25'!
Object subclass: #Combate
	instanceVariableNames: 'primerBando segundoBando'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Ejercicio01'!
!Combate methodsFor: 'initialization' stamp: 'mg 3/22/2024 20:11:40' prior: 50527664!
initializeEntre: bando1 y: bando2 
	
	primerBando := bando1.
	segundoBando := bando2.! !
!CombateTest methodsFor: 'as yet unclassified' stamp: 'mg 3/22/2024 20:12:41' prior: 50527608!
test01_xxx
	|bando1 bando2 combate ganador|
	
	bando1 := {Combatiente new}.
	bando2 := {}.
	
	combate := Combate entre: bando1 y: bando2.
	ganador := combate ganador.
	
	self assert:  ganador = bando1.
	! !

!testRun: #CombateTest #test01_xxx stamp: 'mg 3/22/2024 20:12:45'!
ERROR!
!Combate methodsFor: 'getters' stamp: 'mg 3/22/2024 20:13:23'!
ganador
	self shouldBeImplemented.! !
!Combate methodsFor: 'getters' stamp: 'mg 3/22/2024 20:14:18' prior: 50527704!
ganador
	^primerBando ! !

!testRun: #CombateTest #test01_xxx stamp: 'mg 3/22/2024 20:14:28'!
PASSED!

!testRun: #CombateTest #test01_xxx stamp: 'mg 3/22/2024 20:14:35'!
PASSED!

!testRun: #CombateTest #test01_xxx stamp: 'mg 3/22/2024 20:14:35'!
PASSED!
!CombateTest methodsFor: 'as yet unclassified' stamp: 'mg 3/22/2024 20:16:53'!
test01
	|bando1 bando2 combate ganador|
	
	bando1 := {Combatiente new}.
	bando2 := {}.
	
	combate := Combate entre: bando1 y: bando2.
	ganador := combate ganador.
	
	self assert:  ganador = bando1.
	! !

!methodRemoval: CombateTest #test01_xxx stamp: 'mg 3/22/2024 20:17:02'!
test01_xxx
	|bando1 bando2 combate ganador|
	
	bando1 := {Combatiente new}.
	bando2 := {}.
	
	combate := Combate entre: bando1 y: bando2.
	ganador := combate ganador.
	
	self assert:  ganador = bando1.
	!
!CombateTest methodsFor: 'as yet unclassified' stamp: 'mg 3/22/2024 20:17:16' prior: 50527719!
test01
	|bando1 bando2 combate ganador|
	
	bando1 := {Combatiente new, Combatiente new}.
	bando2 := {Combatiente new}.
	
	combate := Combate entre: bando1 y: bando2.
	ganador := combate ganador.
	
	self assert:  ganador = bando1.
	! !
!CombateTest methodsFor: 'as yet unclassified' stamp: 'mg 3/22/2024 20:17:33' prior: 50527737!
test01
	|bando1 bando2 combate ganador|
	
	bando1 := {Combatiente new, Combatiente new}.
	bando2 := {Combatiente new}.
	
	combate := Combate entre: bando1 y: bando2.
	
	combate desarollar.
	ganador := combate ganador.
	
	self assert:  ganador = bando1.
	! !

!testRun: #CombateTest #test01 stamp: 'mg 3/22/2024 20:18:16'!
ERROR!

!testRun: #CombateTest #test01 stamp: 'mg 3/22/2024 20:19:01'!
ERROR!

!testRun: #CombateTest #test01 stamp: 'mg 3/22/2024 20:19:01'!
ERROR!

!testRun: #CombateTest #test01 stamp: 'mg 3/22/2024 20:19:11'!
ERROR!
!CombateTest methodsFor: 'as yet unclassified' stamp: 'mg 3/22/2024 20:19:29' prior: 50527748!
test01
	|bando1 bando2 combate ganador|
	
	bando1 := {Combatiente new Combatiente new}.
	bando2 := {Combatiente new}.
	
	combate := Combate entre: bando1 y: bando2.
	
	combate desarollar.
	ganador := combate ganador.
	
	self assert:  ganador = bando1.
	! !

!testRun: #CombateTest #test01 stamp: 'mg 3/22/2024 20:19:32'!
ERROR!
!CombateTest methodsFor: 'as yet unclassified' stamp: 'mg 3/22/2024 20:20:03' prior: 50527768!
test01
	|bando1 bando2 combate ganador|
	
	bando1 := {Combatiente new. Combatiente new}.
	bando2 := {Combatiente new}.
	
	combate := Combate entre: bando1 y: bando2.
	
	combate desarollar.
	ganador := combate ganador.
	
	self assert:  ganador = bando1.
	! !

!testRun: #CombateTest #test01 stamp: 'mg 3/22/2024 20:20:45'!
ERROR!
!Combate methodsFor: 'public' stamp: 'mg 3/22/2024 20:21:05'!
desarollar
	self shouldBeImplemented.! !
!Combate methodsFor: 'public' stamp: 'mg 3/22/2024 20:21:09' prior: 50527795!
desarollar
	! !

!testRun: #CombateTest #test01 stamp: 'mg 3/22/2024 20:21:12'!
PASSED!

!testRun: #CombateTest #test01 stamp: 'mg 3/22/2024 20:21:12'!
PASSED!
!CombateTest methodsFor: 'as yet unclassified' stamp: 'mg 3/22/2024 20:21:20'!
test02
	|bando1 bando2 combate ganador|
	
	bando1 := {Combatiente new. Combatiente new}.
	bando2 := {Combatiente new}.
	
	combate := Combate entre: bando1 y: bando2.
	
	combate desarollar.
	ganador := combate ganador.
	
	self assert:  ganador = bando1.
	! !
!CombateTest methodsFor: 'as yet unclassified' stamp: 'mg 3/22/2024 20:21:28' prior: 50527807!
test02
	|bando1 bando2 combate ganador|
	
	bando1 := {Combatiente new}.
	bando2 := {Combatiente new. Combatiente new}.
	
	combate := Combate entre: bando1 y: bando2.
	
	combate desarollar.
	ganador := combate ganador.
	
	self assert:  ganador = bando1.
	! !
!CombateTest methodsFor: 'as yet unclassified' stamp: 'mg 3/22/2024 20:21:39' prior: 50527819!
test02
	|bando1 bando2 combate ganador|
	
	bando1 := {Combatiente new}.
	bando2 := {Combatiente new. Combatiente new}.
	
	combate := Combate entre: bando1 y: bando2.
	
	combate desarollar.
	ganador := combate ganador.
	
	self assert:  ganador = bando2.
	! !

!testRun: #CombateTest #test02 stamp: 'mg 3/22/2024 20:21:41'!
FAILURE!
!CombateTest methodsFor: 'as yet unclassified' stamp: 'mg 3/22/2024 20:50:59'!
test001
	|bando1 bando2 combate |
	
	bando1 := {Combatiente new}.
	bando2 := {Combatiente new. Combatiente new}.
	
	combate := Combate entre: bando1 y: bando2.
	
	combate desarollar.
	
	self deny: bando1 first estaSano.
	! !
!CombateTest methodsFor: 'as yet unclassified' stamp: 'mg 3/22/2024 20:51:13' prior: 50527844!
test001
	|bando1 bando2 combate |
	
	bando1 := {Combatiente new}.
	bando2 := {Combatiente new. Combatiente new}.
	
	combate := Combate entre: bando1 y: bando2.
	
	combate desarollar.
	
	self deny: bando1 first estaSano.
	self deny: bando2 first estaSano.	! !

!testRun: #CombateTest #test001 stamp: 'mg 3/22/2024 20:51:18'!
FAILURE!

!testRun: #CombateTest #test001 stamp: 'mg 3/22/2024 20:51:27'!
FAILURE!

!testRun: #CombateTest #test001 stamp: 'mg 3/22/2024 20:51:31'!
FAILURE!
!CombateTest methodsFor: 'as yet unclassified' stamp: 'mg 3/22/2024 20:51:51' prior: 50527854!
test001
	|bando1 bando2 combate |
	
	bando1 := {Combatiente new}.
	bando2 := {Combatiente new}.
	
	combate := Combate entre: bando1 y: bando2.
	
	combate desarollar.
	
	self deny: bando1 first estaSano.
	self deny: bando2 first estaSano.	! !
!Combate class methodsFor: 'instance creation' stamp: 'mg 3/22/2024 20:53:25' prior: 50527640!
entre: bando1 y: bando2 
	bando1 first asignarEnemigos: bando2.
	bando2 first asignarEnemigos: bando1.

	^self new initializeEntre: bando1 y: bando2 ! !
!Combate methodsFor: 'public' stamp: 'mg 3/22/2024 20:54:27' prior: 50527799!
desarollar
	primerBando first atacar .
	segundoBando first atacar .
	! !
!Combate methodsFor: 'public' stamp: 'mg 3/22/2024 20:54:29' prior: 50527891!
desarollar
	primerBando first atacar.
	segundoBando first atacar.
	! !

!testRun: #CombateTest #test001 stamp: 'mg 3/22/2024 20:54:49'!
PASSED!

!testRun: #CombateTest #test001 stamp: 'mg 3/22/2024 20:54:49'!
PASSED!

!testRun: #CombateTest #test01 stamp: 'mg 3/22/2024 20:54:49'!
PASSED!

!testRun: #CombateTest #test02 stamp: 'mg 3/22/2024 20:54:49'!
FAILURE!

!testRun: #CombateTest #test02 stamp: 'mg 3/22/2024 20:54:49'!
FAILURE!

!methodRemoval: CombateTest #test01 stamp: 'mg 3/22/2024 20:59:44'!
test01
	|bando1 bando2 combate ganador|
	
	bando1 := {Combatiente new. Combatiente new}.
	bando2 := {Combatiente new}.
	
	combate := Combate entre: bando1 y: bando2.
	
	combate desarollar.
	ganador := combate ganador.
	
	self assert:  ganador = bando1.
	!

!methodRemoval: CombateTest #test02 stamp: 'mg 3/22/2024 20:59:47'!
test02
	|bando1 bando2 combate ganador|
	
	bando1 := {Combatiente new}.
	bando2 := {Combatiente new. Combatiente new}.
	
	combate := Combate entre: bando1 y: bando2.
	
	combate desarollar.
	ganador := combate ganador.
	
	self assert:  ganador = bando2.
	!
!CombateTest methodsFor: 'as yet unclassified' stamp: 'mg 3/22/2024 21:00:41'!
test01
	|bando1 bando2 combate |
	
	bando1 := {Combatiente new}.
	bando2 := {Combatiente new}.
	
	combate := Combate entre: bando1 y: bando2.
	
	combate desarollar.
	
	self deny: bando1 first estaSano.
	self deny: bando2 first estaSano.	! !

!methodRemoval: CombateTest #test001 stamp: 'mg 3/22/2024 21:00:41'!
test001
	|bando1 bando2 combate |
	
	bando1 := {Combatiente new}.
	bando2 := {Combatiente new}.
	
	combate := Combate entre: bando1 y: bando2.
	
	combate desarollar.
	
	self deny: bando1 first estaSano.
	self deny: bando2 first estaSano.	!

!testRun: #CombateTest #test01 stamp: 'mg 3/22/2024 21:00:46'!
PASSED!

!testRun: #CombateTest #test01 stamp: 'mg 3/22/2024 21:00:46'!
PASSED!

----STARTUP---- (25 March 2024 14:42:49) as G:\is1-leveroni\cuis\windows64\CuisUniversity-6169.image!


!classRemoval: #JohnVonNeumann stamp: 'mg 3/25/2024 14:43:40'!
DenotativeObject subclass: #JohnVonNeumann
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Form8'!

!classRemoval: #CloneOfJohnVonNeumann stamp: 'mg 3/25/2024 14:43:40'!
DenotativeObject subclass: #CloneOfJohnVonNeumann
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Form8'!

!classRemoval: #AlanTuring stamp: 'mg 3/25/2024 14:43:40'!
DenotativeObject subclass: #AlanTuring
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Form8'!

!classRemoval: #AlanKay stamp: 'mg 3/25/2024 14:43:40'!
DenotativeObject subclass: #AlanKay
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Form8'!

!classRemoval: #AdeleGoldberg stamp: 'mg 3/25/2024 14:43:40'!
DenotativeObject subclass: #AdeleGoldberg
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Form8'!

----End fileIn of G:\is1-leveroni\ejs\combatientes\Ejercicio01.st----!

!methodRemoval: Combate #ganador stamp: 'mg 3/25/2024 14:44:30'!
ganador
	^primerBando !
!CombateTest methodsFor: 'as yet unclassified' stamp: 'mg 3/25/2024 14:44:44' prior: 50527180!
test01
	|bando1 bando2 combate |
	
	bando1 := {Combatiente new}.
	bando2 := {Combatiente new}.
	
	combate := Combate entre: bando1 y: bando2.
	
	combate desarollar.
	
	self deny: bando1 first estaSano.
	self deny: bando2 first estaSano.	! !
!Combate methodsFor: 'public' stamp: 'mg 3/25/2024 14:45:06' prior: 50527342!
desarollar
	primerBando first atacar.
	segundoBando first atacar.
	! !
!CombateTest methodsFor: 'as yet unclassified' stamp: 'mg 3/25/2024 14:45:15'!
test02
	|bando1 bando2 combate |
	
	bando1 := {Combatiente new}.
	bando2 := {Combatiente new}.
	
	combate := Combate entre: bando1 y: bando2.
	
	combate desarollar.
	
	self deny: bando1 first estaSano.
	self deny: bando2 first estaSano.	! !
!CombateTest methodsFor: 'as yet unclassified' stamp: 'mg 3/25/2024 14:45:53' prior: 50527511!
test02
	|bando1 bando2 combate |
	
	bando1 := {Combatiente new. Combatiente new.}.
	bando2 := {Combatiente new}.
	
	combate := Combate entre: bando1 y: bando2.
	
	combate desarollar.
	
	self deny: bando1 first estaSano.
	self deny: bando2 first estaSano.	! !
!CombateTest methodsFor: 'as yet unclassified' stamp: 'mg 3/25/2024 14:46:02' prior: 50527522!
test02
	|bando1 bando2 combate |
	
	bando1 := {Combatiente new. Combatiente new}.
	bando2 := {Combatiente new. Combatiente new}.
	
	combate := Combate entre: bando1 y: bando2.
	
	combate desarollar.
	
	self deny: bando1 first estaSano.
	self deny: bando2 first estaSano.	! !

!testRun: #CombateTest #test01 stamp: 'mg 3/25/2024 14:46:50'!
PASSED!

!testRun: #CombateTest #test01 stamp: 'mg 3/25/2024 14:46:50'!
PASSED!

!testRun: #CombateTest #test02 stamp: 'mg 3/25/2024 14:46:50'!
PASSED!
!CombateTest methodsFor: 'as yet unclassified' stamp: 'mg 3/25/2024 14:48:53' prior: 50527495!
test01
	|bando1 bando2 combate |
	
	bando1 := {Combatiente new}.
	bando2 := {Combatiente new}.
	
	combate := Combate entre: bando1 y: bando2.
	
	combate desarollar.
	
	self deny: bando1 first estaSano.
	self deny: bando2 first estaSano.	! !

!testRun: #CombateTest #test01 stamp: 'mg 3/25/2024 14:49:09'!
PASSED!

!testRun: #CombateTest #test01 stamp: 'mg 3/25/2024 14:49:09'!
PASSED!

!testRun: #CombateTest #test02 stamp: 'mg 3/25/2024 14:49:09'!
PASSED!

!testRun: #CombateTest #test01 stamp: 'mg 3/25/2024 14:49:19'!
PASSED!

!testRun: #CombateTest #test01 stamp: 'mg 3/25/2024 14:49:19'!
PASSED!

!testRun: #CombateTest #test02 stamp: 'mg 3/25/2024 14:49:20'!
PASSED!
!CombateTest methodsFor: 'as yet unclassified' stamp: 'mg 3/25/2024 14:50:02' prior: 50527553!
test01
	|bando1 bando2 combate |
	
	bando1 := {Combatiente new}.
	bando2 := {Combatiente new}.
	
	combate := Combate entre: bando1 y: bando2.
	
	combate desarollar.
	
	self Assert: bando1 first estaSano.
	self deny: bando2 first estaSano.	! !
!CombateTest methodsFor: 'as yet unclassified' stamp: 'mg 3/25/2024 14:50:17' prior: 50527578!
test01
	|bando1 bando2 combate |
	
	bando1 := {Combatiente new}.
	bando2 := {Combatiente new}.
	
	combate := Combate entre: bando1 y: bando2.
	
	combate desarollar.
	
	self assert: bando1 first estaSano.
	self deny: bando2 first estaSano.	! !

!testRun: #CombateTest #test01 stamp: 'mg 3/25/2024 14:50:17'!
FAILURE!
!CombateTest methodsFor: 'as yet unclassified' stamp: 'mg 3/25/2024 14:52:18' prior: 50527589!
test01
	|bando1 bando2 combate |
	
	bando1 := {Combatiente new}.
	bando2 := {Combatiente new}.
	
	combate := Combate entre: bando1 y: bando2.
	
	combate desarollar.
	
	self deny: bando1 first estaSano.
	self deny: bando2 first estaSano.	! !
!CombateTest methodsFor: 'as yet unclassified' stamp: 'mg 3/25/2024 14:52:32' prior: 50527534!
test02
	|bando1 bando2 combate |
	
	bando1 := {Combatiente new. Combatiente new}.
	bando2 := {Combatiente new. Combatiente new}.
	
	combate := Combate entre: bando1 y: bando2.
	
	combate desarollar.
	
	self deny: bando1 last estaSano.
	self deny: bando2 last estaSano.	! !
!CombateTest methodsFor: 'as yet unclassified' stamp: 'mg 3/25/2024 14:52:58' prior: 50527614!
test02
	|bando1 bando2 combate |
	
	bando1 := {Combatiente new. Combatiente new}.
	bando2 := {Combatiente new. Combatiente new}.
	
	combate := Combate entre: bando1 y: bando2.
	
	combate desarollar.
	
	self deny: bando1 first estaSano.
	self deny: bando2 first estaSano.	
	self deny: bando1 last estaSano.
	self deny: bando2 last estaSano.	! !

!testRun: #CombateTest #test02 stamp: 'mg 3/25/2024 14:52:59'!
FAILURE!
!Combate methodsFor: 'public' stamp: 'mg 3/25/2024 14:56:09' prior: 50527506!
desarollar
	primerBando do: []
	
	primerBando first atacar.
	segundoBando first atacar.
	! !
!Combate methodsFor: 'public' stamp: 'mg 3/25/2024 14:56:43' prior: 50527642!
desarollar
	primerBando do: [:combatiente | combatiente atacar]
	
	primerBando first atacar.
	segundoBando first atacar.
	! !
!Combate methodsFor: 'public' stamp: 'mg 3/25/2024 14:57:05' prior: 50527648!
desarollar
	primerBando do: [:combatiente | combatiente atacar].

	segundoBando do: [:combatiente | combatiente atacar]
	! !

!testRun: #CombateTest #test01 stamp: 'mg 3/25/2024 14:57:08'!
PASSED!

!testRun: #CombateTest #test02 stamp: 'mg 3/25/2024 14:57:08'!
FAILURE!

!testRun: #CombateTest #test02 stamp: 'mg 3/25/2024 14:57:08'!
FAILURE!
!Combate methodsFor: 'public' stamp: 'mg 3/25/2024 14:57:22' prior: 50527655!
desarollar
	primerBando do: [:combatiente | combatiente atacar].
	segundoBando do: [:combatiente | combatiente atacar]
	! !

!testRun: #CombateTest #test01 stamp: 'mg 3/25/2024 14:57:30'!
PASSED!

!testRun: #CombateTest #test01 stamp: 'mg 3/25/2024 14:57:30'!
PASSED!

!testRun: #CombateTest #test02 stamp: 'mg 3/25/2024 14:57:30'!
FAILURE!

!testRun: #CombateTest #test02 stamp: 'mg 3/25/2024 14:57:30'!
FAILURE!
!Combate class methodsFor: 'instance creation' stamp: 'mg 3/25/2024 14:58:48' prior: 50527355!
entre: bando1 y: bando2 
	bando1 do: [ :combatiente | combatiente  asignarEnemigos: bando2 ].
	bando2 do: [ :combatiente | combatiente  asignarEnemigos: bando1 ].

	^self new initializeEntre: bando1 y: bando2 ! !
!Combate class methodsFor: 'instance creation' stamp: 'mg 3/25/2024 14:59:00' prior: 50527685!
entre: bando1 y: bando2 
	bando1 do: [ :combatiente | combatiente  asignarEnemigos: bando2 ].
	bando2 do: [ :combatiente | combatiente  asignarEnemigos: bando1 ].
	
	^self new initializeEntre: bando1 y: bando2 ! !

!testRun: #CombateTest #test01 stamp: 'mg 3/25/2024 14:59:11'!
PASSED!

!testRun: #CombateTest #test01 stamp: 'mg 3/25/2024 14:59:11'!
PASSED!

!testRun: #CombateTest #test02 stamp: 'mg 3/25/2024 14:59:11'!
PASSED!
!CombateTest methodsFor: 'as yet unclassified' stamp: 'mg 3/25/2024 15:00:01' prior: 50527626!
test02
	|bando1 bando2 combate |
	
	bando1 := {Combatiente new. Combatiente new}.
	bando2 := {Combatiente new. Combatiente new}.
	
	combate := Combate entre: bando1 y: bando2.
	
	combate desarollar.
	
	bando1 do: [ :combatiente | self deny: combatiente first estaSano.	 ].
	
	
	self deny: bando1 last estaSano.
	self deny: bando2 last estaSano.	! !
!CombateTest methodsFor: 'as yet unclassified' stamp: 'mg 3/25/2024 15:00:12' prior: 50527712!
test02
	|bando1 bando2 combate |
	
	bando1 := {Combatiente new. Combatiente new}.
	bando2 := {Combatiente new. Combatiente new}.
	
	combate := Combate entre: bando1 y: bando2.
	
	combate desarollar.
	
	bando1 do: [ :combatiente | self deny: combatiente first estaSano.	 ].
	bando2 do: [ :combatiente | self deny: combatiente first estaSano.	 ].! !

!testRun: #CombateTest #test02 stamp: 'mg 3/25/2024 15:00:15'!
ERROR!
!CombateTest methodsFor: 'as yet unclassified' stamp: 'mg 3/25/2024 15:00:31' prior: 50527727!
test02
	|bando1 bando2 combate |
	
	bando1 := {Combatiente new. Combatiente new}.
	bando2 := {Combatiente new. Combatiente new}.
	
	combate := Combate entre: bando1 y: bando2.
	
	combate desarollar.
	
	bando1 do: [ :combatiente | self deny: combatiente estaSano.	 ].
	bando2 do: [ :combatiente | self deny: combatiente estaSano.	 ].! !

!testRun: #CombateTest #test02 stamp: 'mg 3/25/2024 15:00:32'!
PASSED!

!testRun: #CombateTest #test01 stamp: 'mg 3/25/2024 15:00:32'!
PASSED!

!testRun: #CombateTest #test02 stamp: 'mg 3/25/2024 15:00:32'!
PASSED!
!CombateTest methodsFor: 'as yet unclassified' stamp: 'mg 3/25/2024 15:00:37'!
test03
	|bando1 bando2 combate |
	
	bando1 := {Combatiente new. Combatiente new}.
	bando2 := {Combatiente new. Combatiente new}.
	
	combate := Combate entre: bando1 y: bando2.
	
	combate desarollar.
	
	bando1 do: [ :combatiente | self deny: combatiente estaSano.	 ].
	bando2 do: [ :combatiente | self deny: combatiente estaSano.	 ].! !
!CombateTest methodsFor: 'as yet unclassified' stamp: 'mg 3/25/2024 15:01:04'!
test03_rondas
	|bando1 bando2 combate |
	
	bando1 := {Combatiente new. Combatiente new}.
	bando2 := {Combatiente new. Combatiente new}.
	
	combate := Combate entre: bando1 y: bando2.
	
	combate desarollar.
	
	bando1 do: [ :combatiente | self deny: combatiente estaSano.	 ].
	bando2 do: [ :combatiente | self deny: combatiente estaSano.	 ].! !
!CombateTest methodsFor: 'as yet unclassified' stamp: 'mg 3/25/2024 15:01:37' prior: 50527778!
test03_rondas
	|bando1 bando2 combate |
	
	bando1 := {Combatiente new}.
	bando2 := {Combatiente new}.
	
	combate := Combate entre: bando1 y: bando2.
	
	combate desarollar.
	
	bando1 do: [ :combatiente | self deny: combatiente estaSano.	 ].
	bando2 do: [ :combatiente | self deny: combatiente estaSano.	 ].! !
!Combate methodsFor: 'public' stamp: 'mg 3/25/2024 15:02:36'!
desarollarRonda
	primerBando do: [:combatiente | combatiente atacar].
	segundoBando do: [:combatiente | combatiente atacar]
	! !
!Combate methodsFor: 'public' stamp: 'mg 3/25/2024 15:03:06' prior: 50527669!
desarollar
	self desarollarRonda
	! !
!Combate methodsFor: 'public' stamp: 'mg 3/25/2024 15:03:07' prior: 50527811!
desarollar
	self desarollarRonda.
	! !

!methodRemoval: CombateTest #test03 stamp: 'mg 3/25/2024 15:03:20'!
test03
	|bando1 bando2 combate |
	
	bando1 := {Combatiente new. Combatiente new}.
	bando2 := {Combatiente new. Combatiente new}.
	
	combate := Combate entre: bando1 y: bando2.
	
	combate desarollar.
	
	bando1 do: [ :combatiente | self deny: combatiente estaSano.	 ].
	bando2 do: [ :combatiente | self deny: combatiente estaSano.	 ].!

!testRun: #CombateTest #test03_rondas stamp: 'mg 3/25/2024 15:03:24'!
PASSED!

!testRun: #CombateTest #test01 stamp: 'mg 3/25/2024 15:03:24'!
PASSED!

!testRun: #CombateTest #test02 stamp: 'mg 3/25/2024 15:03:24'!
PASSED!

!testRun: #CombateTest #test03_rondas stamp: 'mg 3/25/2024 15:03:24'!
PASSED!
!CombateTest methodsFor: 'as yet unclassified' stamp: 'mg 3/25/2024 15:03:42' prior: 50527792!
test03_rondas
	|bando1 bando2 combate |
	
	bando1 := {Combatiente new}.
	bando2 := {Combatiente new}.
	
	combate := Combate entre: bando1 y: bando2.
	
	combate desarollarRonda.
	
	bando1 do: [ :combatiente | self deny: combatiente estaSano.	 ].
	bando2 do: [ :combatiente | self deny: combatiente estaSano.	 ].! !
!CombateTest methodsFor: 'as yet unclassified' stamp: 'mg 3/25/2024 15:04:19' prior: 50527842!
test03_rondas
	|bando1 bando2 combate |
	
	bando1 := {Combatiente new}.
	bando2 := {Combatiente new}.
	
	combate := Combate entre: bando1 y: bando2.
	
	combate desarollar.
	
	bando1 do: [ :combatiente | self deny: combatiente estaSano.	 ].
	bando2 do: [ :combatiente | self deny: combatiente estaSano.	 ].! !
!CombateTest methodsFor: 'as yet unclassified' stamp: 'mg 3/25/2024 15:05:27' prior: 50527856!
test03_rondas
	|bando1 bando2 combate |
	
	bando1 := {Combatiente new}.
	bando2 := {Combatiente new}.
	
	combate := Combate entre: bando1 y: bando2.
	
	combate desarollar. 
	
	bando1 do: [ :combatiente | self deny: combatiente estaSano.	 ].
	bando2 do: [ :combatiente | self deny: combatiente estaSano.	 ].! !
!CombateTest methodsFor: 'as yet unclassified' stamp: 'mg 3/25/2024 15:05:46' prior: 50527869!
test03_rondas
	|bando1 bando2 combate |
	
	bando1 := {Combatiente new}.
	bando2 := {Combatiente new}.
	
	combate := Combate entre: bando1 y: bando2.
	
	combate desarollar. 
	
	bando1 do: [ :combatiente | self deny: combatiente 	 ].
	bando2 do: [ :combatiente | self deny: combatiente estaSano.	 ].! !
!CombateTest methodsFor: 'as yet unclassified' stamp: 'mg 3/25/2024 15:06:54' prior: 50527882!
test03_rondas
	|bando1 bando2 combate |
	
	bando1 := {Combatiente new}.
	bando2 := {Combatiente new}.
	
	combate := Combate entre: bando1 y: bando2.
	
	combate desarollar. 
	
	self assert: bando1 first dan.
	self deny: bando2 first estaSano.	! !
!CombateTest methodsFor: 'as yet unclassified' stamp: 'mg 3/25/2024 15:07:39' prior: 50527895!
test03_rondas
	|bando1 bando2 combate |
	
	bando1 := {Combatiente new}.
	bando2 := {Combatiente new}.
	
	combate := Combate entre: bando1 y: bando2.
	
	combate desarollar. 
	
	self assert: bando1 first dañoRecibido .
	self deny: bando2 first estaSano.	! !
!CombateTest methodsFor: 'as yet unclassified' stamp: 'mg 3/25/2024 15:08:31' prior: 50527906!
test03_rondas
	|bando1 bando2 combate |
	
	bando1 := {Combatiente new}.
	bando2 := {Combatiente new}.
	
	combate := Combate entre: bando1 y: bando2.
	
	combate desarollar. 
	
	self assert: bando1 first estaDañadoPor: 8 .
	self deny: bando2 first estaSano.	! !
!CombateTest methodsFor: 'as yet unclassified' stamp: 'mg 3/25/2024 15:08:39' prior: 50527918!
test03_rondas
	|bando1 bando2 combate |
	
	bando1 := {Combatiente new}.
	bando2 := {Combatiente new}.
	
	combate := Combate entre: bando1 y: bando2.
	
	combate desarollar. 
	
	self assert: bando1 first estaDañadoPor: 8 .
	self deny: bando2 first estaSano.	! !
!CombateTest methodsFor: 'as yet unclassified' stamp: 'mg 3/25/2024 15:08:54' prior: 50527930!
test03_rondas
	|bando1 bando2 combate |
	
	bando1 := {Combatiente new}.
	bando2 := {Combatiente new}.
	
	combate := Combate entre: bando1 y: bando2.
	
	combate desarollar. 
	
	self assert: bando1 first estaDañadoPor: 8.
	self deny: bando2 first estaSano.	! !

!testRun: #CombateTest #test03_rondas stamp: 'mg 3/25/2024 15:08:59'!
ERROR!
!CombateTest methodsFor: 'as yet unclassified' stamp: 'mg 3/25/2024 15:09:17' prior: 50527942!
test03_rondas
	|bando1 bando2 combate |
	
	bando1 := {Combatiente new}.
	bando2 := {Combatiente new}.
	
	combate := Combate entre: bando1 y: bando2.
	
	combate desarollar. 
	
	self assert: bando1 first estaDañadoPor: 8.
	self deny: bando2 first estaSano.	! !
!CombateTest methodsFor: 'as yet unclassified' stamp: 'mg 3/25/2024 15:09:25' prior: 50527956!
test03_rondas
	|bando1 bando2 combate |
	
	bando1 := {Combatiente new}.
	bando2 := {Combatiente new}.
	
	combate := Combate entre: bando1 y: bando2.
	
	combate desarollar. 
	
	self assert: bando1 first estaDañadoPor: 8.
	self assert: bando2 first estaDañadoPor: 8.! !

!testRun: #CombateTest #test03_rondas stamp: 'mg 3/25/2024 15:09:28'!
ERROR!
!CombateTest methodsFor: 'as yet unclassified' stamp: 'mg 3/25/2024 15:09:40' prior: 50527968!
test03_rondas
	|bando1 bando2 combate |
	
	bando1 := {Combatiente new}.
	bando2 := {Combatiente new}.
	
	combate := Combate entre: bando1 y: bando2.
	
	combate desarollar. 
	
	self assert: (bando1 first estaDañadoPor: 8).
	self assert: (bando2 first estaDañadoPor: 8).! !

!testRun: #CombateTest #test03_rondas stamp: 'mg 3/25/2024 15:09:43'!
FAILURE!
!CombateTest methodsFor: 'as yet unclassified' stamp: 'mg 3/25/2024 15:11:52' prior: 50527983!
test03_rondas
	|bando1 bando2 combate |
	
	bando1 := {Combatiente new}.
	bando2 := {Combatiente new}.
	
	combate := Combate entre: bando1 y: bando2.
	
	combate desarollarRondas: 2. 
	
	self assert: (bando1 first estaDañadoPor: 8).
	self assert: (bando2 first estaDañadoPor: 8).! !
!Combate methodsFor: 'public' stamp: 'mg 3/25/2024 15:12:57'!
desarollarRondas: rondas
	rondas timesRepeat: [
		primerBando do: [:combatiente | combatiente atacar].
		segundoBando do: [:combatiente | combatiente atacar]
	]! !
!Combate methodsFor: 'public' stamp: 'mg 3/25/2024 15:13:12' prior: 50528010!
desarollarRondas: cantidadRondas
	cantidadRondas timesRepeat: [
		primerBando do: [:combatiente | combatiente atacar].
		segundoBando do: [:combatiente | combatiente atacar]
	]! !

!testRun: #CombateTest #test03_rondas stamp: 'mg 3/25/2024 15:13:16'!
PASSED!

!testRun: #CombateTest #test01 stamp: 'mg 3/25/2024 15:13:16'!
PASSED!

!testRun: #CombateTest #test02 stamp: 'mg 3/25/2024 15:13:16'!
PASSED!

!testRun: #CombateTest #test03_rondas stamp: 'mg 3/25/2024 15:13:16'!
PASSED!

!methodRemoval: Combate #desarollarRondas: stamp: 'mg 3/25/2024 15:14:03'!
desarollarRondas: cantidadRondas
	cantidadRondas timesRepeat: [
		primerBando do: [:combatiente | combatiente atacar].
		segundoBando do: [:combatiente | combatiente atacar]
	]!
!CombateTest methodsFor: 'as yet unclassified' stamp: 'mg 3/25/2024 15:14:19' prior: 50527998!
test03_rondas
	|bando1 bando2 combate |
	
	bando1 := {Combatiente new}.
	bando2 := {Combatiente new}.
	
	combate := Combate entre: bando1 y: bando2.
	
	combate desarollar. 
	
	self assert: (bando1 first estaDañadoPor: 8).
	self assert: (bando2 first estaDañadoPor: 8).! !
!CombateTest methodsFor: 'as yet unclassified' stamp: 'mg 3/25/2024 15:17:52' prior: 50528045!
test03_rondas
	|bando1 bando2 combate |
	
	bando1 := {Combatiente new}.
	bando2 := {Combatiente new}.
	
	combate := Combate entre: bando1 y: bando2.
	
	combate desarollarRonda. 	combate desarollarRonda. 
	
	
	self assert: (bando1 first estaDañadoPor: 8).
	self assert: (bando2 first estaDañadoPor: 8).! !

!testRun: #CombateTest #test03_rondas stamp: 'mg 3/25/2024 15:18:07'!
PASSED!

!testRun: #CombateTest #test01 stamp: 'mg 3/25/2024 15:18:07'!
PASSED!

!testRun: #CombateTest #test02 stamp: 'mg 3/25/2024 15:18:07'!
PASSED!

!testRun: #CombateTest #test03_rondas stamp: 'mg 3/25/2024 15:18:07'!
PASSED!
!CombateTest methodsFor: 'as yet unclassified' stamp: 'mg 3/25/2024 15:18:24'!
test04_hasta_la_muerte
	|bando1 bando2 combate |
	
	bando1 := {Combatiente new}.
	bando2 := {Combatiente new}.
	
	combate := Combate entre: bando1 y: bando2.
	
	combate desarollarRonda. 	combate desarollarRonda. 
	
	
	self assert: (bando1 first estaDañadoPor: 8).
	self assert: (bando2 first estaDañadoPor: 8).! !
!CombateTest methodsFor: 'as yet unclassified' stamp: 'mg 3/25/2024 15:18:50'!
test04_hastaLaMuerte
	|bando1 bando2 combate |
	
	bando1 := {Combatiente new}.
	bando2 := {Combatiente new}.
	
	combate := Combate entre: bando1 y: bando2.
	
	combate desarollarRonda. 	combate desarollarRonda. 
	
	
	self assert: (bando1 first estaDañadoPor: 8).
	self assert: (bando2 first estaDañadoPor: 8).! !

!methodRemoval: CombateTest #test04_hasta_la_muerte stamp: 'mg 3/25/2024 15:18:50'!
test04_hasta_la_muerte
	|bando1 bando2 combate |
	
	bando1 := {Combatiente new}.
	bando2 := {Combatiente new}.
	
	combate := Combate entre: bando1 y: bando2.
	
	combate desarollarRonda. 	combate desarollarRonda. 
	
	
	self assert: (bando1 first estaDañadoPor: 8).
	self assert: (bando2 first estaDañadoPor: 8).!
!CombateTest methodsFor: 'as yet unclassified' stamp: 'mg 3/25/2024 15:19:25'!
test01_ataquesCruzados
	|bando1 bando2 combate |
	
	bando1 := {Combatiente new}.
	bando2 := {Combatiente new}.
	
	combate := Combate entre: bando1 y: bando2.
	
	combate desarollar.
	
	self deny: bando1 first estaSano.
	self deny: bando2 first estaSano.	! !

!methodRemoval: CombateTest #test01 stamp: 'mg 3/25/2024 15:19:25'!
test01
	|bando1 bando2 combate |
	
	bando1 := {Combatiente new}.
	bando2 := {Combatiente new}.
	
	combate := Combate entre: bando1 y: bando2.
	
	combate desarollar.
	
	self deny: bando1 first estaSano.
	self deny: bando2 first estaSano.	!
!CombateTest methodsFor: 'as yet unclassified' stamp: 'mg 3/25/2024 15:19:52'!
test02_atacanTodosLosCombatienetes
	|bando1 bando2 combate |
	
	bando1 := {Combatiente new. Combatiente new}.
	bando2 := {Combatiente new. Combatiente new}.
	
	combate := Combate entre: bando1 y: bando2.
	
	combate desarollar.
	
	bando1 do: [ :combatiente | self deny: combatiente estaSano.	 ].
	bando2 do: [ :combatiente | self deny: combatiente estaSano.	 ].! !

!methodRemoval: CombateTest #test02 stamp: 'mg 3/25/2024 15:19:52'!
test02
	|bando1 bando2 combate |
	
	bando1 := {Combatiente new. Combatiente new}.
	bando2 := {Combatiente new. Combatiente new}.
	
	combate := Combate entre: bando1 y: bando2.
	
	combate desarollar.
	
	bando1 do: [ :combatiente | self deny: combatiente estaSano.	 ].
	bando2 do: [ :combatiente | self deny: combatiente estaSano.	 ].!
!CombateTest methodsFor: 'as yet unclassified' stamp: 'mg 3/25/2024 15:20:05'!
test02_atacanTodosLosCombatientes
	|bando1 bando2 combate |
	
	bando1 := {Combatiente new. Combatiente new}.
	bando2 := {Combatiente new. Combatiente new}.
	
	combate := Combate entre: bando1 y: bando2.
	
	combate desarollar.
	
	bando1 do: [ :combatiente | self deny: combatiente estaSano.	 ].
	bando2 do: [ :combatiente | self deny: combatiente estaSano.	 ].! !

!methodRemoval: CombateTest #test02_atacanTodosLosCombatienetes stamp: 'mg 3/25/2024 15:20:05'!
test02_atacanTodosLosCombatienetes
	|bando1 bando2 combate |
	
	bando1 := {Combatiente new. Combatiente new}.
	bando2 := {Combatiente new. Combatiente new}.
	
	combate := Combate entre: bando1 y: bando2.
	
	combate desarollar.
	
	bando1 do: [ :combatiente | self deny: combatiente estaSano.	 ].
	bando2 do: [ :combatiente | self deny: combatiente estaSano.	 ].!
!CombateTest methodsFor: 'as yet unclassified' stamp: 'mg 3/25/2024 15:20:41' prior: 50528092!
test04_hastaLaMuerte
	|bando1 bando2 combate |
	
	bando1 := {Combatiente new}.
	bando2 := {Combatiente new}.
	
	combate := Combate entre: bando1 y: bando2.
	
	combate desarollarRonda. 	combate desarollarRonda. 
	
	
	self deny: (bando1 first estaMuerto).
	self assert: (bando2 first estaMuerto).! !
!CombateTest methodsFor: 'as yet unclassified' stamp: 'mg 3/25/2024 15:20:50' prior: 50528196!
test04_hastaLaMuerte
	|bando1 bando2 combate |
	
	bando1 := {Combatiente new}.
	bando2 := {Combatiente new}.
	
	combate := Combate entre: bando1 y: bando2.
	
	combate desarollar . 
	
	
	self deny: (bando1 first estaMuerto).
	self assert: (bando2 first estaMuerto).! !

!testRun: #CombateTest #test04_hastaLaMuerte stamp: 'mg 3/25/2024 15:20:57'!
ERROR!

!testRun: #CombateTest #test04_hastaLaMuerte stamp: 'mg 3/25/2024 15:21:07'!
ERROR!
!Combatiente methodsFor: 'public' stamp: 'mg 3/25/2024 15:21:38'!
estaMuerto
	self shouldBeImplemented.! !
!Combatiente methodsFor: 'public' stamp: 'mg 3/25/2024 15:21:57' prior: 50528225!
estaMuerto
	self dañoRecibido = 20. ! !

!testRun: #CombateTest #test04_hastaLaMuerte stamp: 'mg 3/25/2024 15:22:10'!
ERROR!
!Combate methodsFor: 'public' stamp: 'mg 3/25/2024 15:25:46' prior: 50527815!
desarollar
	segundoBando first estaMuerto whileFalse: [
		self desarollarRonda.
	]
	
	! !

!testRun: #CombateTest #test04_hastaLaMuerte stamp: 'mg 3/25/2024 15:25:49'!
ERROR!

!testRun: #CombateTest #test04_hastaLaMuerte stamp: 'mg 3/25/2024 15:26:05'!
ERROR!
!Combate methodsFor: 'public' stamp: 'mg 3/25/2024 15:26:42' prior: 50528236!
desarollar
	(segundoBando first estaMuerto) whileFalse: [
		self desarollarRonda.
	]
	
	! !

!testRun: #CombateTest #test02_atacanTodosLosCombatientes stamp: 'mg 3/25/2024 15:26:45'!
ERROR!
!Combatiente methodsFor: 'public' stamp: 'mg 3/25/2024 15:27:05' prior: 50528229!
estaMuerto
	^dañoRecibido = 20. ! !
!Combate methodsFor: 'public' stamp: 'mg 3/25/2024 15:27:12' prior: 50528247!
desarollar
	segundoBando first estaMuerto whileFalse: [
		self desarollarRonda.
	]
	
	! !

!testRun: #CombateTest #test02_atacanTodosLosCombatientes stamp: 'mg 3/25/2024 15:27:15'!
ERROR!
!Combate methodsFor: 'public' stamp: 'mg 3/25/2024 15:27:42' prior: 50528260!
desarollar
	[segundoBando first estaMuerto] whileFalse: [
		self desarollarRonda.
	]
	
	! !

!testRun: #CombateTest #test03_rondas stamp: 'mg 3/25/2024 15:27:45'!
PASSED!

!testRun: #CombateTest #test01_ataquesCruzados stamp: 'mg 3/25/2024 15:27:45'!
PASSED!

!testRun: #CombateTest #test02_atacanTodosLosCombatientes stamp: 'mg 3/25/2024 15:27:45'!
PASSED!

!testRun: #CombateTest #test03_rondas stamp: 'mg 3/25/2024 15:27:45'!
PASSED!

!testRun: #CombateTest #test04_hastaLaMuerte stamp: 'mg 3/25/2024 15:27:45'!
FAILURE!

!testRun: #CombateTest #test04_hastaLaMuerte stamp: 'mg 3/25/2024 15:27:45'!
FAILURE!
!CombateTest methodsFor: 'as yet unclassified' stamp: 'mg 3/25/2024 15:28:08' prior: 50528057!
test03_rondas
	|bando1 bando2 combate |
	
	bando1 := {Combatiente new}.
	bando2 := {Combatiente new}.
	
	combate := Combate entre: bando1 y: bando2.
	
	combate desarollarRonda. 	combate desarollarRonda. 
	
	
	self assert: (bando2 first estaDañadoPor: 8).! !
!CombateTest methodsFor: 'as yet unclassified' stamp: 'mg 3/25/2024 15:28:21' prior: 50528292!
test03_rondas
	|bando1 bando2 combate |
	
	bando1 := {Combatiente new}.
	bando2 := {Combatiente new}.
	
	combate := Combate entre: bando1 y: bando2.
	
	combate desarollarRonda. 	combate desarollarRonda. 
	
	
	self assert: (bando1 first estaDañadoPor: 8).
	self assert: (bando2 first estaDañadoPor: 8).! !
!CombateTest methodsFor: 'as yet unclassified' stamp: 'mg 3/25/2024 15:28:24' prior: 50528209!
test04_hastaLaMuerte
	|bando1 bando2 combate |
	
	bando1 := {Combatiente new}.
	bando2 := {Combatiente new}.
	
	combate := Combate entre: bando1 y: bando2.
	
	combate desarollar . 
	
	
	self assert: (bando2 first estaMuerto).! !

!testRun: #CombateTest #test04_hastaLaMuerte stamp: 'mg 3/25/2024 15:28:24'!
PASSED!

!testRun: #CombateTest #test01_ataquesCruzados stamp: 'mg 3/25/2024 15:28:24'!
PASSED!

!testRun: #CombateTest #test02_atacanTodosLosCombatientes stamp: 'mg 3/25/2024 15:28:24'!
PASSED!

!testRun: #CombateTest #test03_rondas stamp: 'mg 3/25/2024 15:28:24'!
PASSED!

!testRun: #CombateTest #test04_hastaLaMuerte stamp: 'mg 3/25/2024 15:28:24'!
PASSED!
!CombateTest methodsFor: 'as yet unclassified' stamp: 'mg 3/25/2024 15:30:03'!
test04_hastaLaMuertexxx
	|bando1 bando2 combate |
	
	bando1 := {Combatiente new}.
	bando2 := {Combatiente new}.
	
	combate := Combate entre: bando1 y: bando2.
	
	combate desarollar . 
	
	
	self assert: (bando2 first estaMuerto).! !
!CombateTest methodsFor: 'as yet unclassified' stamp: 'mg 3/25/2024 15:31:09'!
test04_hastaLaMuerteCombatienteBando2
	|bando1 bando2 combate |
	
	bando1 := {Combatiente new}.
	bando2 := {Combatiente new}.
	
	combate := Combate entre: bando1 y: bando2.
	
	combate desarollar . 
	
	
	self assert: (bando2 first estaMuerto).! !
!CombateTest methodsFor: 'as yet unclassified' stamp: 'mg 3/25/2024 15:31:30'!
test05_
	|bando1 bando2 combate |
	
	bando1 := {Combatiente new}.
	bando2 := {Combatiente new}.
	
	combate := Combate entre: bando1 y: bando2.
	
	combate desarollar . 
	
	
	self assert: (bando2 first estaMuerto).! !

!methodRemoval: CombateTest #test04_hastaLaMuertexxx stamp: 'mg 3/25/2024 15:31:49'!
test04_hastaLaMuertexxx
	|bando1 bando2 combate |
	
	bando1 := {Combatiente new}.
	bando2 := {Combatiente new}.
	
	combate := Combate entre: bando1 y: bando2.
	
	combate desarollar . 
	
	
	self assert: (bando2 first estaMuerto).!

!methodRemoval: CombateTest #test04_hastaLaMuerte stamp: 'mg 3/25/2024 15:31:53'!
test04_hastaLaMuerte
	|bando1 bando2 combate |
	
	bando1 := {Combatiente new}.
	bando2 := {Combatiente new}.
	
	combate := Combate entre: bando1 y: bando2.
	
	combate desarollar . 
	
	
	self assert: (bando2 first estaMuerto).!
!CombateTest methodsFor: 'as yet unclassified' stamp: 'mg 3/25/2024 15:32:21' prior: 50528362!
test05_
	|bando1 bando2 combate |
	
	bando1 := {Combatiente new}.
	bando2 := {Combatiente new}.
	
	combate := Combate entre: bando1 y: bando2.
	
	combate desarollar . 
	
	
	self deny: (bando1 first estaMuerto )! !
!CombateTest methodsFor: 'as yet unclassified' stamp: 'mg 3/25/2024 15:32:22' prior: 50528393!
test05_
	|bando1 bando2 combate |
	
	bando1 := {Combatiente new}.
	bando2 := {Combatiente new}.
	
	combate := Combate entre: bando1 y: bando2.
	
	combate desarollar . 
	
	
	self deny: (bando1 first estaMuerto)! !

!testRun: #CombateTest #test05_ stamp: 'mg 3/25/2024 15:32:23'!
FAILURE!
!CombatientesTest methodsFor: 'tests-combatir' stamp: 'mg 3/25/2024 15:34:03'!
test_09_NoAtacaSiEstaMuerto

	| david goliat |
	david := Combatiente new.
	goliat := Combatiente new.
	5 timesRepeat: [
    		david atacar.
	].
	
	self assert: goliat estaSano.
! !
!CombatientesTest methodsFor: 'tests-combatir' stamp: 'mg 3/25/2024 15:34:26'!
test_10_NoAtacaSiEstaMuerto

	| david goliat |
	david := Combatiente new.
	goliat := Combatiente new.
	5 timesRepeat: [
    		david atacar.
	].
	
	self assert: goliat estaSano.
! !

!methodRemoval: CombatientesTest #test_09_NoAtacaSiEstaMuerto stamp: 'mg 3/25/2024 15:34:26'!
test_09_NoAtacaSiEstaMuerto

	| david goliat |
	david := Combatiente new.
	goliat := Combatiente new.
	5 timesRepeat: [
    		david atacar.
	].
	
	self assert: goliat estaSano.
!
!CombatientesTest methodsFor: 'tests-combatir' stamp: 'mg 3/25/2024 15:35:08'!
test_09_MuereCuandoRecibe20DeDaño

	| david goliat |
	david := Combatiente new.
	goliat := Combatiente new.
	self deny: goliat estaMuerto.

	5 timesRepeat: [
    		david atacar.
	].
	
	self assert: goliat estaSano.
! !
!CombatientesTest methodsFor: 'tests-combatir' stamp: 'mg 3/25/2024 15:35:18' prior: 50528442!
test_09_MuereCuandoRecibe20DeDaño

	| david goliat |
	david := Combatiente new.
	goliat := Combatiente new.
	self deny: goliat estaMuerto.

	5 timesRepeat: [
    		david atacar.
	].
	self assert: goliat estaMuerto.
! !
!CombatientesTest methodsFor: 'tests-combatir' stamp: 'mg 3/25/2024 15:35:42' prior: 50528453!
test_09_MuereCuandoRecibe20DeDaño

	| david goliat |
	david := Combatiente new.
	goliat := Combatiente new.
	david asignarEnemigos: {goliat}.
	
	self deny: goliat estaMuerto.

	5 timesRepeat: [
    		david atacar.
	].
	self assert: goliat estaMuerto.
! !
!CombatientesTest methodsFor: 'tests-combatir' stamp: 'mg 3/25/2024 15:35:48' prior: 50528464!
test_09_MuereCuandoRecibe20DeDaño

	| david goliat |
	david := Combatiente new.
	goliat := Combatiente new.
	
	self deny: goliat estaMuerto.

	david asignarEnemigos: {goliat}.

	5 timesRepeat: [
    		david atacar.
	].
	self assert: goliat estaMuerto.
! !
!CombatientesTest methodsFor: 'tests-combatir' stamp: 'mg 3/25/2024 15:35:55' prior: 50528424!
test_10_NoAtacaSiEstaMuerto

	| david goliat |
	david := Combatiente new.
	goliat := Combatiente new.
	david asignarEnemigos: {goliat}.

	5 timesRepeat: [
    		david atacar.
	].
	
	self assert: goliat estaSano.
! !
!CombatientesTest methodsFor: 'tests-combatir' stamp: 'mg 3/25/2024 15:36:35' prior: 50528488!
test_10_NoAtacaSiEstaMuerto

	| david goliat |
	david := Combatiente new.
	goliat := Combatiente new.
	david asignarEnemigos: {goliat}.

	5 timesRepeat: [
    		david atacar.
	].
	
	goliat asignarEnemigos: {david}.
	goliat atacar.
	
	self assert: (david estaSano)
! !
!CombatientesTest methodsFor: 'tests-combatir' stamp: 'mg 3/25/2024 15:36:39' prior: 50528498!
test_10_NoAtacaSiEstaMuerto

	| david goliat |
	david := Combatiente new.
	goliat := Combatiente new.
	david asignarEnemigos: {goliat}.

	5 timesRepeat: [
    		david atacar.
	].
	
	goliat asignarEnemigos: {david}.
	goliat atacar.
	
	self assert: david estaSano
! !

!testRun: #CombatientesTest #test_10_NoAtacaSiEstaMuerto stamp: 'mg 3/25/2024 15:36:41'!
FAILURE!
!Combatiente methodsFor: 'public' stamp: 'mg 3/25/2024 15:37:41' prior: 50527433!
atacar
	| victimaElegida |
	self estaMuerto ifTrue: [^self].

	enemigos isEmpty ifTrue: [^self].

	victimaElegida := self elegirVictima.
	self atacarA: victimaElegida.
! !

!testRun: #CombatientesTest #test_10_NoAtacaSiEstaMuerto stamp: 'mg 3/25/2024 15:37:46'!
PASSED!

!testRun: #CombatientesTest #test01PuedoDefinirleUnaEstrategiaADavid stamp: 'mg 3/25/2024 15:37:46'!
PASSED!

!testRun: #CombatientesTest #test02EnfocarseEnElMasSanoAtacaAlMenosDañado stamp: 'mg 3/25/2024 15:37:46'!
PASSED!

!testRun: #CombatientesTest #test03EnfocarseEnElMasSanoAtacaAlMenosDañadoNoImportaElOrden stamp: 'mg 3/25/2024 15:37:46'!
PASSED!

!testRun: #CombatientesTest #test04EnfocarseEnElMasHeridoAtacaAlMasDañado stamp: 'mg 3/25/2024 15:37:46'!
PASSED!

!testRun: #CombatientesTest #test_01_GoliatEmpiezaSano stamp: 'mg 3/25/2024 15:37:46'!
PASSED!

!testRun: #CombatientesTest #test_02_GoliatNoEstaSanoSiRecibeDaño stamp: 'mg 3/25/2024 15:37:46'!
PASSED!

!testRun: #CombatientesTest #test_03_CuandoSeDañaAAlguienEsPorUnaCantidadDeDaño stamp: 'mg 3/25/2024 15:37:46'!
PASSED!

!testRun: #CombatientesTest #test_04_CuandoSeDañaAAlguienEsPorUnaCantidadDeDaño stamp: 'mg 3/25/2024 15:37:46'!
PASSED!

!testRun: #CombatientesTest #test_05_GoliatPuedeRecibirDañoMultiplesVeces stamp: 'mg 3/25/2024 15:37:46'!
PASSED!

!testRun: #CombatientesTest #test_06_DavidPuedeAtacarAAlguien stamp: 'mg 3/25/2024 15:37:46'!
PASSED!

!testRun: #CombatientesTest #test_07_DavidPuedeAtacarEnemigosAsignados stamp: 'mg 3/25/2024 15:37:46'!
PASSED!

!testRun: #CombatientesTest #test_08_DavidNoAtacaAUnEnemigoNoAsignado stamp: 'mg 3/25/2024 15:37:46'!
PASSED!

!testRun: #CombatientesTest #test_09_MuereCuandoRecibe20DeDaño stamp: 'mg 3/25/2024 15:37:46'!
PASSED!

!testRun: #CombatientesTest #test_10_NoAtacaSiEstaMuerto stamp: 'mg 3/25/2024 15:37:46'!
PASSED!
!CombateTest methodsFor: 'as yet unclassified' stamp: 'mg 3/25/2024 15:38:27'!
test05_CombatienteBando1ViveSiMatoAlBando2
	|bando1 bando2 combate |
	
	bando1 := {Combatiente new}.
	bando2 := {Combatiente new}.
	
	combate := Combate entre: bando1 y: bando2.
	
	combate desarollar . 
	
	
	self deny: (bando1 first estaMuerto)! !

!methodRemoval: CombateTest #test05_ stamp: 'mg 3/25/2024 15:38:27'!
test05_
	|bando1 bando2 combate |
	
	bando1 := {Combatiente new}.
	bando2 := {Combatiente new}.
	
	combate := Combate entre: bando1 y: bando2.
	
	combate desarollar . 
	
	
	self deny: (bando1 first estaMuerto)!

!testRun: #CombateTest #test05_CombatienteBando1ViveSiMatoAlBando2 stamp: 'mg 3/25/2024 15:38:30'!
PASSED!

!testRun: #CombateTest #test01_ataquesCruzados stamp: 'mg 3/25/2024 15:38:30'!
PASSED!

!testRun: #CombateTest #test02_atacanTodosLosCombatientes stamp: 'mg 3/25/2024 15:38:30'!
PASSED!

!testRun: #CombateTest #test03_rondas stamp: 'mg 3/25/2024 15:38:30'!
PASSED!

!testRun: #CombateTest #test04_hastaLaMuerteCombatienteBando2 stamp: 'mg 3/25/2024 15:38:30'!
PASSED!

!testRun: #CombateTest #test05_CombatienteBando1ViveSiMatoAlBando2 stamp: 'mg 3/25/2024 15:38:30'!
PASSED!
!CombateTest methodsFor: 'as yet unclassified' stamp: 'mg 3/25/2024 15:39:25'!
test06_combateTerminaCuandoTodosLosDelBandoMueren
	|bando1 bando2 combate |
	
	bando1 := {Combatiente new}.
	bando2 := {Combatiente new}.
	
	combate := Combate entre: bando1 y: bando2.
	
	combate desarollar . 
	
	
	self deny: (bando1 first estaMuerto)! !
!CombateTest methodsFor: 'as yet unclassified' stamp: 'mg 3/25/2024 15:39:29'!
test06_combateTerminaCuandoTodosLosDeUnBandoMueren
	|bando1 bando2 combate |
	
	bando1 := {Combatiente new}.
	bando2 := {Combatiente new}.
	
	combate := Combate entre: bando1 y: bando2.
	
	combate desarollar . 
	
	
	self deny: (bando1 first estaMuerto)! !

!methodRemoval: CombateTest #test06_combateTerminaCuandoTodosLosDelBandoMueren stamp: 'mg 3/25/2024 15:39:32'!
test06_combateTerminaCuandoTodosLosDelBandoMueren
	|bando1 bando2 combate |
	
	bando1 := {Combatiente new}.
	bando2 := {Combatiente new}.
	
	combate := Combate entre: bando1 y: bando2.
	
	combate desarollar . 
	
	
	self deny: (bando1 first estaMuerto)!
!CombateTest methodsFor: 'as yet unclassified' stamp: 'mg 3/25/2024 15:40:13' prior: 50528635!
test06_combateTerminaCuandoTodosLosDeUnBandoMueren
	|bando1 bando2 combate |
	
	bando1 := {Combatiente new. Combatiente new}.
	bando2 := {Combatiente new. Combatiente new}.
	
	combate := Combate entre: bando1 y: bando2.
	
	combate desarollar . 
	
	
	self assert: (bando2 first estaMuerto).
	self assert: (bando2 last estaMuerto)! !

!testRun: #CombateTest #test06_combateTerminaCuandoTodosLosDeUnBandoMueren stamp: 'mg 3/25/2024 15:40:14'!
PASSED!

!testRun: #CombateTest #test01_ataquesCruzados stamp: 'mg 3/25/2024 15:40:14'!
PASSED!

!testRun: #CombateTest #test02_atacanTodosLosCombatientes stamp: 'mg 3/25/2024 15:40:14'!
PASSED!

!testRun: #CombateTest #test03_rondas stamp: 'mg 3/25/2024 15:40:14'!
PASSED!

!testRun: #CombateTest #test04_hastaLaMuerteCombatienteBando2 stamp: 'mg 3/25/2024 15:40:14'!
PASSED!

!testRun: #CombateTest #test05_CombatienteBando1ViveSiMatoAlBando2 stamp: 'mg 3/25/2024 15:40:14'!
PASSED!

!testRun: #CombateTest #test06_combateTerminaCuandoTodosLosDeUnBandoMueren stamp: 'mg 3/25/2024 15:40:14'!
PASSED!
!CombateTest methodsFor: 'as yet unclassified' stamp: 'mg 3/25/2024 15:41:20' prior: 50528658!
test06_combateTerminaCuandoTodosLosDeUnBandoMueren
	|bando1 bando2 combate |
	
	bando1 := {Combatiente new.}.
	bando2 := {Combatiente new. Combatiente new}.
	
	combate := Combate entre: bando1 y: bando2.
	
	combate desarollar . 
	
	
	self assert: (bando2 first estaMuerto).
	self assert: (bando2 last estaMuerto)! !
!CombateTest methodsFor: 'as yet unclassified' stamp: 'mg 3/25/2024 15:42:23' prior: 50528694!
test06_combateTerminaCuandoTodosLosDeUnBandoMueren
	|bando1 bando2 combate |
	
	bando1 := {Combatiente new. Combatiente new}.
	bando2 := {Combatiente new. Combatiente new}.
	
	combate := Combate entre: bando1 y: bando2.	

	
	combate desarollar . 
	
	
	self assert: (bando2 first estaMuerto).
	self assert: (bando2 last estaMuerto)! !
!CombateTest methodsFor: 'as yet unclassified' stamp: 'mg 3/25/2024 15:44:35' prior: 50528708!
test06_combateTerminaCuandoTodosLosDeUnBandoMueren
	|bando1 bando2 combate |
	
	bando1 := {Combatiente new. Combatiente new}.
	bando2 := {Combatiente new. Combatiente new}.
	bando1 do: [:combatiente | combatiente enfocarseEnElMasHerido ].
	
	combate := Combate entre: bando1 y: bando2.	

	
	combate desarollar . 
	
	
	self assert: (bando2 first estaMuerto).
	self assert: (bando2 last estaMuerto)! !
!CombateTest methodsFor: 'as yet unclassified' stamp: 'mg 3/25/2024 15:45:48' prior: 50528722!
test06_combateTerminaCuandoTodosLosDeUnBandoMueren
	|bando1 bando2 combate |
	
	bando1 := {Combatiente new. Combatiente new}.
	bando2 := {Combatiente new. Combatiente new}.
	bando1 do: [:combatiente | combatiente enfocarseEnElMasHerido ].
	
	combate := Combate entre: bando1 y: bando2.

	
	combate desarollar . 
	
	
	bando2 do: [:combatiente | self assert: combatiente estaMuerto ].! !
!Combate methodsFor: 'public' stamp: 'mg 3/25/2024 15:47:43' prior: 50528269!
desarollar
	[segundoBando last estaMuerto] whileFalse: [
		self desarollarRonda.
	]
	
	! !
!Combate methodsFor: 'public' stamp: 'mg 3/25/2024 15:50:47' prior: 50528753!
desarollar
	[segundoBando allSatisfy: [:combatiente | combatiente estaMuerto ]] whileFalse: [
		self desarollarRonda.
	]
	
	! !

!testRun: #CombateTest #test01_ataquesCruzados stamp: 'mg 3/25/2024 15:50:53'!
PASSED!

!testRun: #CombateTest #test02_atacanTodosLosCombatientes stamp: 'mg 3/25/2024 15:50:54'!
PASSED!

!testRun: #CombateTest #test03_rondas stamp: 'mg 3/25/2024 15:50:54'!
PASSED!

!testRun: #CombateTest #test04_hastaLaMuerteCombatienteBando2 stamp: 'mg 3/25/2024 15:50:54'!
PASSED!

!testRun: #CombateTest #test05_CombatienteBando1ViveSiMatoAlBando2 stamp: 'mg 3/25/2024 15:50:54'!
PASSED!
!CombateTest methodsFor: 'as yet unclassified' stamp: 'mg 3/25/2024 15:52:54' prior: 50528738!
test06_combateTerminaCuandoTodosLosDeUnBandoMueren
	|bando1 bando2 combate |
		^self.

	! !

!testRun: #CombateTest #test06_combateTerminaCuandoTodosLosDeUnBandoMueren stamp: 'mg 3/25/2024 15:53:03'!
PASSED!

!testRun: #CombateTest #test01_ataquesCruzados stamp: 'mg 3/25/2024 15:53:03'!
PASSED!

!testRun: #CombateTest #test02_atacanTodosLosCombatientes stamp: 'mg 3/25/2024 15:53:03'!
PASSED!

!testRun: #CombateTest #test03_rondas stamp: 'mg 3/25/2024 15:53:03'!
PASSED!

!testRun: #CombateTest #test04_hastaLaMuerteCombatienteBando2 stamp: 'mg 3/25/2024 15:53:03'!
PASSED!

!testRun: #CombateTest #test05_CombatienteBando1ViveSiMatoAlBando2 stamp: 'mg 3/25/2024 15:53:03'!
PASSED!

!testRun: #CombateTest #test06_combateTerminaCuandoTodosLosDeUnBandoMueren stamp: 'mg 3/25/2024 15:53:03'!
PASSED!

----STARTUP---- (25 March 2024 15:53:32) as G:\is1-leveroni\cuis\windows64\CuisUniversity-6169.image!


!classRemoval: #JohnVonNeumann stamp: 'mg 3/25/2024 15:53:38'!
DenotativeObject subclass: #JohnVonNeumann
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Form8'!

!classRemoval: #CloneOfJohnVonNeumann stamp: 'mg 3/25/2024 15:53:38'!
DenotativeObject subclass: #CloneOfJohnVonNeumann
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Form8'!

!classRemoval: #AlanTuring stamp: 'mg 3/25/2024 15:53:38'!
DenotativeObject subclass: #AlanTuring
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Form8'!

!classRemoval: #AlanKay stamp: 'mg 3/25/2024 15:53:38'!
DenotativeObject subclass: #AlanKay
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Form8'!

!classRemoval: #AdeleGoldberg stamp: 'mg 3/25/2024 15:53:39'!
DenotativeObject subclass: #AdeleGoldberg
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Form8'!

----End fileIn of G:\is1-leveroni\cuis\windows64-UserFiles\FileOuts\Ejercicio01.st----!
!Combate methodsFor: 'public' stamp: 'mg 3/25/2024 15:55:55' prior: 50529102!
desarollar
	[primerBando allSatisfy: [:combatiente | combatiente estaMuerto ]] whileFalse: [
		self desarollarRonda.
	]
	
	! !
!Combatiente methodsFor: 'public' stamp: 'mg 3/25/2024 15:57:21' prior: 50529249!
estaMuerto
	^dañoRecibido >= 20. ! !
!Combate methodsFor: 'public' stamp: 'mg 3/25/2024 15:57:48' prior: 50529273!
desarollar
	[segundoBando allSatisfy: [:combatiente | combatiente estaMuerto ]] whileFalse: [
		self desarollarRonda.
	]
	
	! !

!testRun: #CombatientesTest #test_06_DavidPuedeAtacarAAlguien stamp: 'mg 3/25/2024 15:58:00'!
PASSED!

!testRun: #CombatientesTest #test_06_DavidPuedeAtacarAAlguien stamp: 'mg 3/25/2024 15:58:02'!
PASSED!

!testRun: #CombatientesTest #test01PuedoDefinirleUnaEstrategiaADavid stamp: 'mg 3/25/2024 15:58:02'!
PASSED!

!testRun: #CombatientesTest #test02EnfocarseEnElMasSanoAtacaAlMenosDañado stamp: 'mg 3/25/2024 15:58:02'!
PASSED!

!testRun: #CombatientesTest #test03EnfocarseEnElMasSanoAtacaAlMenosDañadoNoImportaElOrden stamp: 'mg 3/25/2024 15:58:02'!
PASSED!

!testRun: #CombatientesTest #test04EnfocarseEnElMasHeridoAtacaAlMasDañado stamp: 'mg 3/25/2024 15:58:03'!
PASSED!

!testRun: #CombatientesTest #test_01_GoliatEmpiezaSano stamp: 'mg 3/25/2024 15:58:03'!
PASSED!

!testRun: #CombatientesTest #test_02_GoliatNoEstaSanoSiRecibeDaño stamp: 'mg 3/25/2024 15:58:03'!
PASSED!

!testRun: #CombatientesTest #test_03_CuandoSeDañaAAlguienEsPorUnaCantidadDeDaño stamp: 'mg 3/25/2024 15:58:03'!
PASSED!

!testRun: #CombatientesTest #test_04_CuandoSeDañaAAlguienEsPorUnaCantidadDeDaño stamp: 'mg 3/25/2024 15:58:03'!
PASSED!

!testRun: #CombatientesTest #test_05_GoliatPuedeRecibirDañoMultiplesVeces stamp: 'mg 3/25/2024 15:58:03'!
PASSED!

!testRun: #CombatientesTest #test_06_DavidPuedeAtacarAAlguien stamp: 'mg 3/25/2024 15:58:03'!
PASSED!

!testRun: #CombatientesTest #test_07_DavidPuedeAtacarEnemigosAsignados stamp: 'mg 3/25/2024 15:58:03'!
PASSED!

!testRun: #CombatientesTest #test_08_DavidNoAtacaAUnEnemigoNoAsignado stamp: 'mg 3/25/2024 15:58:03'!
PASSED!

!testRun: #CombatientesTest #test_09_MuereCuandoRecibe20DeDaño stamp: 'mg 3/25/2024 15:58:03'!
PASSED!

!testRun: #CombatientesTest #test_10_NoAtacaSiEstaMuerto stamp: 'mg 3/25/2024 15:58:03'!
PASSED!

!testRun: #CombateTest #test05_CombatienteBando1ViveSiMatoAlBando2 stamp: 'mg 3/25/2024 15:58:10'!
PASSED!
!CombateTest methodsFor: 'as yet unclassified' stamp: 'mg 3/25/2024 15:58:32' prior: 50528915!
test06_combateTerminaCuandoTodosLosDeUnBandoMueren
	|bando1 bando2 combate |
	
	bando1 := {Combatiente new. Combatiente new}.
	bando2 := {Combatiente new. Combatiente new}.
	combate := Combate entre: bando1 y: bando2.

	bando1 do: [:combatiente | combatiente enfocarseEnElMasHerido ].
	
	combate desarollar . 
	
	
	bando2 do: [:combatiente | self assert: combatiente estaMuerto ].! !

		segundoBando  first dañoRecibido.!

		segundoBando last dañoRecibido. 60 .!
!CombatientesTest methodsFor: 'tests-combatir' stamp: 'mg 3/25/2024 16:02:15'!
test_11_NoSeEnfocaSiEstaMuerto

	| david goliat isaac |
	david := Combatiente new.
	goliat := Combatiente new.
	isaac := 	Combatiente new.
	david asignarEnemigos: {goliat}.

	5 timesRepeat: [
    		david atacar.
	].
	
	goliat asignarEnemigos: {david}.
	goliat atacar.
	
	self assert: david estaSano
! !
!CombatientesTest methodsFor: 'tests-combatir' stamp: 'mg 3/25/2024 16:02:27' prior: 50529368!
test_11_NoSeEnfocaSiEstaMuerto

	| david goliat isaac |
	david := Combatiente new.
	goliat := Combatiente new.
	isaac := 	Combatiente new.
	david asignarEnemigos: {goliat, isaac}.

	5 timesRepeat: [
    		david atacar.
	].
	
	goliat asignarEnemigos: {david}.
	goliat atacar.
	
	self assert: david estaSano
! !
!CombatientesTest methodsFor: 'tests-combatir' stamp: 'mg 3/25/2024 16:02:47' prior: 50529381!
test_11_NoSeEnfocaSiEstaMuerto

	| david goliat |
	david := Combatiente new.
	goliat := Combatiente new.
	david asignarEnemigos: {goliat}.

	6 timesRepeat: [
    		david atacar.
	].
	
	goliat asignarEnemigos: {david}.
	goliat atacar.
	
	self assert: david estaSano
! !
!CombatientesTest methodsFor: 'tests-combatir' stamp: 'mg 3/25/2024 16:03:39' prior: 50529394!
test_11_NoSeEnfocaSiEstaMuerto

	| david goliat |
	david := Combatiente new.
	goliat := Combatiente new.
	david asignarEnemigos: {goliat}.

	6 timesRepeat: [
    		david atacar.
	].
		
	self assert: goliat 
! !
!CombatientesTest methodsFor: 'tests-combatir' stamp: 'mg 3/25/2024 16:04:00' prior: 50529406!
test_11_NoSeEnfocaSiEstaMuerto

	| david goliat |
	david := Combatiente new.
	goliat := Combatiente new.
	david asignarEnemigos: {goliat}.

	6 timesRepeat: [
    		david atacar.
	].
		
	self assert: (goliat estaDañadoPor: 20).
! !
!CombatientesTest methodsFor: 'tests-estrategia' stamp: 'mg 3/25/2024 16:04:41'!
test05_NoSeEnfocaSiEstaMuerto

	| david goliat |
	david := Combatiente new.
	goliat := Combatiente new.
	david asignarEnemigos: {goliat}.

	6 timesRepeat: [
    		david atacar.
	].
		
	self assert: (goliat estaDañadoPor: 20).
! !

!methodRemoval: CombatientesTest #test_11_NoSeEnfocaSiEstaMuerto stamp: 'mg 3/25/2024 16:04:41'!
test_11_NoSeEnfocaSiEstaMuerto

	| david goliat |
	david := Combatiente new.
	goliat := Combatiente new.
	david asignarEnemigos: {goliat}.

	6 timesRepeat: [
    		david atacar.
	].
		
	self assert: (goliat estaDañadoPor: 20).
!

!testRun: #CombatientesTest #test05_NoSeEnfocaSiEstaMuerto stamp: 'mg 3/25/2024 16:04:48'!
FAILURE!
!Combatiente methodsFor: 'public' stamp: 'mg 3/25/2024 16:07:10' prior: 50529237!
enfocarseEnElMasSano
	estrategia := [:candidatos | candidatos filter: [:candidato | candidato estaMuerto negated ] 
		
		detectMin: [:combatiente | combatiente dañoRecibido]].
! !
!Combatiente methodsFor: 'public' stamp: 'mg 3/25/2024 16:07:24' prior: 50529450!
enfocarseEnElMasSano
	estrategia := [:candidatos | candidatos filter: [:candidato | candidato estaMuerto negated ] 		detectMin: [:combatiente | combatiente dañoRecibido]].
! !
!Combatiente methodsFor: 'public' stamp: 'mg 3/25/2024 16:07:26' prior: 50529459!
enfocarseEnElMasSano
	estrategia := [:candidatos | candidatos filter: [:candidato | candidato estaMuerto negated ] 	detectMin: [:combatiente | combatiente dañoRecibido]].
! !

!testRun: #CombatientesTest #test05_NoSeEnfocaSiEstaMuerto stamp: 'mg 3/25/2024 16:07:38'!
ERROR!
!Combatiente methodsFor: 'public' stamp: 'mg 3/25/2024 16:08:10' prior: 50529468!
enfocarseEnElMasSano
	estrategia := [:candidatos | (candidatos filter: [:candidato | candidato estaMuerto negated ]) 	detectMin: [:combatiente | combatiente dañoRecibido]].
! !
!Combatiente methodsFor: 'public' stamp: 'mg 3/25/2024 16:09:12' prior: 50529480!
enfocarseEnElMasSano
	estrategia := [:candidatos | (candidatos select: [:candidato | candidato estaMuerto negated ]) 	detectMin: [:combatiente | combatiente dañoRecibido]].
! !
!CombatientesTest methodsFor: 'tests-estrategia' stamp: 'mg 3/25/2024 16:09:38'!
test05NoSeEnfocaSiEstaMuerto

	| david goliat |
	david := Combatiente new.
	goliat := Combatiente new.
	david asignarEnemigos: {goliat}.

	6 timesRepeat: [
    		david atacar.
	].
		
	self assert: (goliat estaDañadoPor: 20).
! !

!methodRemoval: CombatientesTest #test05_NoSeEnfocaSiEstaMuerto stamp: 'mg 3/25/2024 16:09:38'!
test05_NoSeEnfocaSiEstaMuerto

	| david goliat |
	david := Combatiente new.
	goliat := Combatiente new.
	david asignarEnemigos: {goliat}.

	6 timesRepeat: [
    		david atacar.
	].
		
	self assert: (goliat estaDañadoPor: 20).
!

!testRun: #CombatientesTest #test05NoSeEnfocaSiEstaMuerto stamp: 'mg 3/25/2024 16:09:41'!
ERROR!
!Combatiente methodsFor: 'public' stamp: 'mg 3/25/2024 16:10:08' prior: 50529489!
enfocarseEnElMasSano
	estrategia := [:candidatos | (candidatos select: [:candidato | candidato estaMuerto not ]) 	detectMin: [:combatiente | combatiente dañoRecibido]].
! !

!testRun: #CombatientesTest #test05NoSeEnfocaSiEstaMuerto stamp: 'mg 3/25/2024 16:10:23'!
ERROR!
!Combatiente methodsFor: 'public' stamp: 'mg 3/25/2024 16:11:21' prior: 50529207!
atacar
	| victimaElegida |
	self estaMuerto ifTrue: [^self].

	victimaElegida := self elegirVictima.
	

	self atacarA: victimaElegida.
! !
!Combatiente methodsFor: 'public' stamp: 'mg 3/25/2024 16:11:35' prior: 50529534!
atacar
	| victimaElegida |
	self estaMuerto ifTrue: [^self].

	victimaElegida := self elegirVictima.
	

	self atacarA: victimaElegida.
! !

!testRun: #CombateTest #test01_ataquesCruzados stamp: 'mg 3/25/2024 16:11:36'!
PASSED!

!testRun: #CombateTest #test02_atacanTodosLosCombatientes stamp: 'mg 3/25/2024 16:11:36'!
PASSED!

!testRun: #CombateTest #test03_rondas stamp: 'mg 3/25/2024 16:11:36'!
PASSED!

!testRun: #CombateTest #test04_hastaLaMuerteCombatienteBando2 stamp: 'mg 3/25/2024 16:11:36'!
PASSED!

!testRun: #CombateTest #test05_CombatienteBando1ViveSiMatoAlBando2 stamp: 'mg 3/25/2024 16:11:36'!
PASSED!

!testRun: #CombateTest #test06_combateTerminaCuandoTodosLosDeUnBandoMueren stamp: 'mg 3/25/2024 16:11:36'!
ERROR!

!testRun: #CombatientesTest #test01PuedoDefinirleUnaEstrategiaADavid stamp: 'mg 3/25/2024 16:11:36'!
PASSED!

!testRun: #CombatientesTest #test02EnfocarseEnElMasSanoAtacaAlMenosDañado stamp: 'mg 3/25/2024 16:11:36'!
PASSED!

!testRun: #CombatientesTest #test03EnfocarseEnElMasSanoAtacaAlMenosDañadoNoImportaElOrden stamp: 'mg 3/25/2024 16:11:36'!
PASSED!

!testRun: #CombatientesTest #test04EnfocarseEnElMasHeridoAtacaAlMasDañado stamp: 'mg 3/25/2024 16:11:36'!
PASSED!

!testRun: #CombatientesTest #test05NoSeEnfocaSiEstaMuerto stamp: 'mg 3/25/2024 16:11:36'!
ERROR!

!testRun: #CombatientesTest #test_01_GoliatEmpiezaSano stamp: 'mg 3/25/2024 16:11:36'!
PASSED!

!testRun: #CombatientesTest #test_02_GoliatNoEstaSanoSiRecibeDaño stamp: 'mg 3/25/2024 16:11:36'!
PASSED!

!testRun: #CombatientesTest #test_03_CuandoSeDañaAAlguienEsPorUnaCantidadDeDaño stamp: 'mg 3/25/2024 16:11:37'!
PASSED!

!testRun: #CombatientesTest #test_04_CuandoSeDañaAAlguienEsPorUnaCantidadDeDaño stamp: 'mg 3/25/2024 16:11:37'!
PASSED!

!testRun: #CombatientesTest #test_05_GoliatPuedeRecibirDañoMultiplesVeces stamp: 'mg 3/25/2024 16:11:37'!
PASSED!

!testRun: #CombatientesTest #test_06_DavidPuedeAtacarAAlguien stamp: 'mg 3/25/2024 16:11:37'!
PASSED!

!testRun: #CombatientesTest #test_07_DavidPuedeAtacarEnemigosAsignados stamp: 'mg 3/25/2024 16:11:37'!
PASSED!

!testRun: #CombatientesTest #test_08_DavidNoAtacaAUnEnemigoNoAsignado stamp: 'mg 3/25/2024 16:11:37'!
ERROR!

!testRun: #CombatientesTest #test_09_MuereCuandoRecibe20DeDaño stamp: 'mg 3/25/2024 16:11:37'!
PASSED!

!testRun: #CombatientesTest #test_10_NoAtacaSiEstaMuerto stamp: 'mg 3/25/2024 16:11:37'!
PASSED!
!Combatiente methodsFor: 'public' stamp: 'mg 3/25/2024 16:11:49' prior: 50529542!
atacar
	| victimaElegida |
	self estaMuerto ifTrue: [^self].

	enemigos isEmpty ifTrue: [^self].

	victimaElegida := self elegirVictima.
	

	self atacarA: victimaElegida.
! !

!testRun: #CombateTest #test01_ataquesCruzados stamp: 'mg 3/25/2024 16:11:50'!
PASSED!

!testRun: #CombateTest #test02_atacanTodosLosCombatientes stamp: 'mg 3/25/2024 16:11:50'!
PASSED!

!testRun: #CombateTest #test03_rondas stamp: 'mg 3/25/2024 16:11:50'!
PASSED!

!testRun: #CombateTest #test04_hastaLaMuerteCombatienteBando2 stamp: 'mg 3/25/2024 16:11:50'!
PASSED!

!testRun: #CombateTest #test05_CombatienteBando1ViveSiMatoAlBando2 stamp: 'mg 3/25/2024 16:11:50'!
PASSED!

!testRun: #CombateTest #test06_combateTerminaCuandoTodosLosDeUnBandoMueren stamp: 'mg 3/25/2024 16:11:50'!
ERROR!

!testRun: #CombatientesTest #test01PuedoDefinirleUnaEstrategiaADavid stamp: 'mg 3/25/2024 16:11:50'!
PASSED!

!testRun: #CombatientesTest #test02EnfocarseEnElMasSanoAtacaAlMenosDañado stamp: 'mg 3/25/2024 16:11:50'!
PASSED!

!testRun: #CombatientesTest #test03EnfocarseEnElMasSanoAtacaAlMenosDañadoNoImportaElOrden stamp: 'mg 3/25/2024 16:11:50'!
PASSED!

!testRun: #CombatientesTest #test04EnfocarseEnElMasHeridoAtacaAlMasDañado stamp: 'mg 3/25/2024 16:11:50'!
PASSED!

!testRun: #CombatientesTest #test05NoSeEnfocaSiEstaMuerto stamp: 'mg 3/25/2024 16:11:50'!
ERROR!

!testRun: #CombatientesTest #test_01_GoliatEmpiezaSano stamp: 'mg 3/25/2024 16:11:50'!
PASSED!

!testRun: #CombatientesTest #test_02_GoliatNoEstaSanoSiRecibeDaño stamp: 'mg 3/25/2024 16:11:50'!
PASSED!

!testRun: #CombatientesTest #test_03_CuandoSeDañaAAlguienEsPorUnaCantidadDeDaño stamp: 'mg 3/25/2024 16:11:50'!
PASSED!

!testRun: #CombatientesTest #test_04_CuandoSeDañaAAlguienEsPorUnaCantidadDeDaño stamp: 'mg 3/25/2024 16:11:50'!
PASSED!

!testRun: #CombatientesTest #test_05_GoliatPuedeRecibirDañoMultiplesVeces stamp: 'mg 3/25/2024 16:11:50'!
PASSED!

!testRun: #CombatientesTest #test_06_DavidPuedeAtacarAAlguien stamp: 'mg 3/25/2024 16:11:50'!
PASSED!

!testRun: #CombatientesTest #test_07_DavidPuedeAtacarEnemigosAsignados stamp: 'mg 3/25/2024 16:11:50'!
PASSED!

!testRun: #CombatientesTest #test_08_DavidNoAtacaAUnEnemigoNoAsignado stamp: 'mg 3/25/2024 16:11:50'!
PASSED!

!testRun: #CombatientesTest #test_09_MuereCuandoRecibe20DeDaño stamp: 'mg 3/25/2024 16:11:51'!
PASSED!

!testRun: #CombatientesTest #test_10_NoAtacaSiEstaMuerto stamp: 'mg 3/25/2024 16:11:51'!
PASSED!

!testRun: #CombatientesTest #test05NoSeEnfocaSiEstaMuerto stamp: 'mg 3/25/2024 16:12:13'!
ERROR!
!Combatiente methodsFor: 'public' stamp: 'mg 3/25/2024 16:12:59' prior: 50529620!
atacar
	| victimaElegida |
	self estaMuerto ifTrue: [^self].

	enemigos isEmpty ifTrue: [^self].

	victimaElegida := self elegirVictima.
	victimaElegida 

	self atacarA: victimaElegida.
! !

!testRun: #CombateTest #test06_combateTerminaCuandoTodosLosDeUnBandoMueren stamp: 'mg 3/25/2024 16:12:59'!
ERROR!
!Combatiente methodsFor: 'public' stamp: 'mg 3/25/2024 16:14:03' prior: 50529702!
atacar
	| victimaElegida |
	self estaMuerto ifTrue: [^self].

	enemigos isEmpty ifTrue: [^self].

	victimaElegida := self elegirVictima.
	victimaElegida isNil.

	self atacarA: victimaElegida.
! !

!testRun: #CombateTest #test01_ataquesCruzados stamp: 'mg 3/25/2024 16:14:04'!
PASSED!

!testRun: #CombateTest #test02_atacanTodosLosCombatientes stamp: 'mg 3/25/2024 16:14:04'!
PASSED!

!testRun: #CombateTest #test03_rondas stamp: 'mg 3/25/2024 16:14:04'!
PASSED!

!testRun: #CombateTest #test04_hastaLaMuerteCombatienteBando2 stamp: 'mg 3/25/2024 16:14:04'!
PASSED!

!testRun: #CombateTest #test05_CombatienteBando1ViveSiMatoAlBando2 stamp: 'mg 3/25/2024 16:14:04'!
PASSED!

!testRun: #CombateTest #test06_combateTerminaCuandoTodosLosDeUnBandoMueren stamp: 'mg 3/25/2024 16:14:04'!
ERROR!

!testRun: #CombatientesTest #test01PuedoDefinirleUnaEstrategiaADavid stamp: 'mg 3/25/2024 16:14:04'!
PASSED!

!testRun: #CombatientesTest #test02EnfocarseEnElMasSanoAtacaAlMenosDañado stamp: 'mg 3/25/2024 16:14:04'!
PASSED!

!testRun: #CombatientesTest #test03EnfocarseEnElMasSanoAtacaAlMenosDañadoNoImportaElOrden stamp: 'mg 3/25/2024 16:14:04'!
PASSED!

!testRun: #CombatientesTest #test04EnfocarseEnElMasHeridoAtacaAlMasDañado stamp: 'mg 3/25/2024 16:14:04'!
PASSED!

!testRun: #CombatientesTest #test05NoSeEnfocaSiEstaMuerto stamp: 'mg 3/25/2024 16:14:04'!
ERROR!

!testRun: #CombatientesTest #test_01_GoliatEmpiezaSano stamp: 'mg 3/25/2024 16:14:04'!
PASSED!

!testRun: #CombatientesTest #test_02_GoliatNoEstaSanoSiRecibeDaño stamp: 'mg 3/25/2024 16:14:05'!
PASSED!

!testRun: #CombatientesTest #test_03_CuandoSeDañaAAlguienEsPorUnaCantidadDeDaño stamp: 'mg 3/25/2024 16:14:05'!
PASSED!

!testRun: #CombatientesTest #test_04_CuandoSeDañaAAlguienEsPorUnaCantidadDeDaño stamp: 'mg 3/25/2024 16:14:05'!
PASSED!

!testRun: #CombatientesTest #test_05_GoliatPuedeRecibirDañoMultiplesVeces stamp: 'mg 3/25/2024 16:14:05'!
PASSED!

!testRun: #CombatientesTest #test_06_DavidPuedeAtacarAAlguien stamp: 'mg 3/25/2024 16:14:05'!
PASSED!

!testRun: #CombatientesTest #test_07_DavidPuedeAtacarEnemigosAsignados stamp: 'mg 3/25/2024 16:14:05'!
PASSED!

!testRun: #CombatientesTest #test_08_DavidNoAtacaAUnEnemigoNoAsignado stamp: 'mg 3/25/2024 16:14:05'!
PASSED!

!testRun: #CombatientesTest #test_09_MuereCuandoRecibe20DeDaño stamp: 'mg 3/25/2024 16:14:05'!
PASSED!

!testRun: #CombatientesTest #test_10_NoAtacaSiEstaMuerto stamp: 'mg 3/25/2024 16:14:05'!
PASSED!
!Combatiente methodsFor: 'public' stamp: 'mg 3/25/2024 16:15:44' prior: 50529715!
atacar
	| victimaElegida |
	self estaMuerto ifTrue: [^self].

	enemigos isEmpty ifTrue: [^self].

	victimaElegida := self elegirVictima.
	(victimaElegida == nil) ifTrue: [^self].

	self atacarA: victimaElegida.
! !

!testRun: #CombateTest #test01_ataquesCruzados stamp: 'mg 3/25/2024 16:15:46'!
PASSED!

!testRun: #CombateTest #test02_atacanTodosLosCombatientes stamp: 'mg 3/25/2024 16:15:46'!
PASSED!

!testRun: #CombateTest #test03_rondas stamp: 'mg 3/25/2024 16:15:46'!
PASSED!

!testRun: #CombateTest #test04_hastaLaMuerteCombatienteBando2 stamp: 'mg 3/25/2024 16:15:46'!
PASSED!

!testRun: #CombateTest #test05_CombatienteBando1ViveSiMatoAlBando2 stamp: 'mg 3/25/2024 16:15:46'!
PASSED!
!Combatiente methodsFor: 'public' stamp: 'mg 3/25/2024 16:16:49' prior: 50529795!
atacar
	| victimaElegida |
	self estaMuerto ifTrue: [^self].
	
	victimaElegida := self elegirVictima.
	(victimaElegida == nil) ifTrue: [^self].

	self atacarA: victimaElegida.
! !

!testRun: #CombateTest #test01_ataquesCruzados stamp: 'mg 3/25/2024 16:16:51'!
PASSED!

!testRun: #CombateTest #test02_atacanTodosLosCombatientes stamp: 'mg 3/25/2024 16:16:51'!
PASSED!

!testRun: #CombateTest #test03_rondas stamp: 'mg 3/25/2024 16:16:51'!
PASSED!

!testRun: #CombateTest #test04_hastaLaMuerteCombatienteBando2 stamp: 'mg 3/25/2024 16:16:51'!
PASSED!

!testRun: #CombateTest #test05_CombatienteBando1ViveSiMatoAlBando2 stamp: 'mg 3/25/2024 16:16:51'!
PASSED!

----STARTUP---- (25 March 2024 16:17:53) as G:\is1-leveroni\cuis\windows64\CuisUniversity-6169.image!


!classRemoval: #JohnVonNeumann stamp: 'mg 3/25/2024 16:17:59'!
DenotativeObject subclass: #JohnVonNeumann
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Form8'!

!classRemoval: #CloneOfJohnVonNeumann stamp: 'mg 3/25/2024 16:17:59'!
DenotativeObject subclass: #CloneOfJohnVonNeumann
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Form8'!

!classRemoval: #AlanTuring stamp: 'mg 3/25/2024 16:17:59'!
DenotativeObject subclass: #AlanTuring
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Form8'!

!classRemoval: #AlanKay stamp: 'mg 3/25/2024 16:17:59'!
DenotativeObject subclass: #AlanKay
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Form8'!

!classRemoval: #AdeleGoldberg stamp: 'mg 3/25/2024 16:18:00'!
DenotativeObject subclass: #AdeleGoldberg
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Form8'!

----SNAPSHOT----(25 March 2024 16:18:06) CuisUniversity-6169.image priorSource: 6255393!

----End fileIn of G:\is1-leveroni\cuis\windows64-UserFiles\FileOuts\Ejercicio01.st----!

!testRun: #CombatientesTest #test01PuedoDefinirleUnaEstrategiaADavid stamp: 'mg 3/25/2024 16:18:31'!
PASSED!

!testRun: #CombatientesTest #test02EnfocarseEnElMasSanoAtacaAlMenosDañado stamp: 'mg 3/25/2024 16:18:32'!
PASSED!

!testRun: #CombatientesTest #test03EnfocarseEnElMasSanoAtacaAlMenosDañadoNoImportaElOrden stamp: 'mg 3/25/2024 16:18:33'!
PASSED!

!testRun: #CombatientesTest #test04EnfocarseEnElMasHeridoAtacaAlMasDañado stamp: 'mg 3/25/2024 16:18:34'!
PASSED!

!testRun: #CombatientesTest #test05NoSeEnfocaSiEstaMuerto stamp: 'mg 3/25/2024 16:18:36'!
PASSED!
!Combatiente methodsFor: 'public' stamp: 'mg 3/25/2024 16:19:30' prior: 50530280!
enfocarseEnElMasHerido
	estrategia := [:candidatos | (candidatos select: [:candidato | candidato estaMuerto not ]) 	detectMax: [:combatiente | combatiente dañoRecibido]].
! !

!testRun: #CombatientesTest #test01PuedoDefinirleUnaEstrategiaADavid stamp: 'mg 3/25/2024 16:19:42'!
PASSED!

!testRun: #CombatientesTest #test02EnfocarseEnElMasSanoAtacaAlMenosDañado stamp: 'mg 3/25/2024 16:19:42'!
PASSED!

!testRun: #CombatientesTest #test03EnfocarseEnElMasSanoAtacaAlMenosDañadoNoImportaElOrden stamp: 'mg 3/25/2024 16:19:42'!
PASSED!

!testRun: #CombatientesTest #test04EnfocarseEnElMasHeridoAtacaAlMasDañado stamp: 'mg 3/25/2024 16:19:42'!
PASSED!

!testRun: #CombatientesTest #test05NoSeEnfocaSiEstaMuerto stamp: 'mg 3/25/2024 16:19:42'!
PASSED!

!testRun: #CombatientesTest #test_01_GoliatEmpiezaSano stamp: 'mg 3/25/2024 16:19:46'!
PASSED!

!testRun: #CombatientesTest #test_02_GoliatNoEstaSanoSiRecibeDaño stamp: 'mg 3/25/2024 16:19:46'!
PASSED!

!testRun: #CombatientesTest #test_03_CuandoSeDañaAAlguienEsPorUnaCantidadDeDaño stamp: 'mg 3/25/2024 16:19:46'!
PASSED!

!testRun: #CombatientesTest #test_04_CuandoSeDañaAAlguienEsPorUnaCantidadDeDaño stamp: 'mg 3/25/2024 16:19:46'!
PASSED!

!testRun: #CombatientesTest #test_05_GoliatPuedeRecibirDañoMultiplesVeces stamp: 'mg 3/25/2024 16:19:46'!
PASSED!

!testRun: #CombatientesTest #test_06_DavidPuedeAtacarAAlguien stamp: 'mg 3/25/2024 16:19:46'!
PASSED!

!testRun: #CombatientesTest #test_07_DavidPuedeAtacarEnemigosAsignados stamp: 'mg 3/25/2024 16:19:46'!
PASSED!

!testRun: #CombatientesTest #test_08_DavidNoAtacaAUnEnemigoNoAsignado stamp: 'mg 3/25/2024 16:19:46'!
PASSED!

!testRun: #CombatientesTest #test_09_MuereCuandoRecibe20DeDaño stamp: 'mg 3/25/2024 16:19:46'!
PASSED!

!testRun: #CombatientesTest #test_10_NoAtacaSiEstaMuerto stamp: 'mg 3/25/2024 16:19:46'!
PASSED!

!testRun: #CombateTest #test06_combateTerminaCuandoTodosLosDeUnBandoMueren stamp: 'mg 3/25/2024 16:19:57'!
PASSED!

!testRun: #CombateTest #test01_ataquesCruzados stamp: 'mg 3/25/2024 16:19:57'!
PASSED!

!testRun: #CombateTest #test02_atacanTodosLosCombatientes stamp: 'mg 3/25/2024 16:19:57'!
PASSED!

!testRun: #CombateTest #test03_rondas stamp: 'mg 3/25/2024 16:19:57'!
PASSED!

!testRun: #CombateTest #test04_hastaLaMuerteCombatienteBando2 stamp: 'mg 3/25/2024 16:19:57'!
PASSED!

!testRun: #CombateTest #test05_CombatienteBando1ViveSiMatoAlBando2 stamp: 'mg 3/25/2024 16:19:57'!
PASSED!

!testRun: #CombateTest #test06_combateTerminaCuandoTodosLosDeUnBandoMueren stamp: 'mg 3/25/2024 16:19:57'!
PASSED!
!CombateTest methodsFor: 'as yet unclassified' stamp: 'mg 3/25/2024 16:20:50'!
test06_finalizaCuandoMuereAlgunBando
	|bando1 bando2 combate |
	
	bando1 := {Combatiente new. Combatiente new}.
	bando2 := {Combatiente new. Combatiente new}.
	combate := Combate entre: bando1 y: bando2.

	bando1 do: [:combatiente | combatiente enfocarseEnElMasHerido ].
	
	combate desarollar . 
	
	
	bando2 do: [:combatiente | self assert: combatiente estaMuerto ].! !
!CombateTest methodsFor: 'as yet unclassified' stamp: 'mg 3/25/2024 16:21:13' prior: 50530426!
test06_finalizaCuandoMuereAlgunBando
	|bando1 bando2 combate |
	
	bando1 := {Combatiente new.}.
	bando2 := {Combatiente new. Combatiente new}.
	combate := Combate entre: bando1 y: bando2.

	bando1 do: [:combatiente | combatiente enfocarseEnElMasHerido ].
	
	combate desarollar . 
	
	
	bando2 do: [:combatiente | self assert: combatiente estaMuerto ].! !
!CombateTest methodsFor: 'as yet unclassified' stamp: 'mg 3/25/2024 16:21:24' prior: 50530441!
test06_finalizaCuandoMuereAlgunBando
	|bando1 bando2 combate |
	
	bando1 := {Combatiente new.}.
	bando2 := {Combatiente new. Combatiente new}.
	combate := Combate entre: bando1 y: bando2.
	
	combate desarollar . 
	
	
	bando2 do: [:combatiente | self assert: combatiente estaMuerto ].! !
!CombateTest methodsFor: 'as yet unclassified' stamp: 'mg 3/25/2024 16:21:43' prior: 50530456!
test06_finalizaCuandoMuereAlgunBando
	|bando1 bando2 combate |
	
	bando1 := {Combatiente new.}.
	bando2 := {Combatiente new. Combatiente new}.
	combate := Combate entre: bando1 y: bando2.
	
	combate desarollar . 
	
	
	bando1 do: [:combatiente | self assert: combatiente estaMuerto ].! !
!CombateTest methodsFor: 'as yet unclassified' stamp: 'mg 3/25/2024 16:21:53' prior: 50530469!
test06_finalizaCuandoMuereAlgunBando
	|bando1 bando2 combate |
	
	bando1 := {Combatiente new.}.
	bando2 := {Combatiente new. Combatiente new}.
	combate := Combate entre: bando1 y: bando2.
	
	combate desarollar . 
	
	
	bando1 do: [:combatiente | self assert: combatiente estaMuerto ].! !
!Combate methodsFor: 'public' stamp: 'mg 3/25/2024 16:23:07' prior: 50530150!
desarollar
	[
		(primerBando allSatisfy: [:combatiente | combatiente estaMuerto ]) | (segundoBando allSatisfy: [:combatiente | combatiente estaMuerto ]) 
	] whileFalse: [
		self desarollarRonda.
	]
	
	! !
!Combate methodsFor: 'public' stamp: 'mg 3/25/2024 16:23:29' prior: 50530494!
desarollar
	[
		(primerBando allSatisfy: [:combatiente | combatiente estaMuerto ]) 
		|
		(segundoBando allSatisfy: [:combatiente | combatiente estaMuerto ]) 
	] whileFalse: [
		self desarollarRonda.
	]
	
	! !

!testRun: #CombateTest #test06_finalizaCuandoMuereAlgunBando stamp: 'mg 3/25/2024 16:23:39'!
PASSED!

!testRun: #CombateTest #test01_ataquesCruzados stamp: 'mg 3/25/2024 16:23:39'!
PASSED!

!testRun: #CombateTest #test02_atacanTodosLosCombatientes stamp: 'mg 3/25/2024 16:23:39'!
PASSED!

!testRun: #CombateTest #test03_rondas stamp: 'mg 3/25/2024 16:23:39'!
PASSED!

!testRun: #CombateTest #test04_hastaLaMuerteCombatienteBando2 stamp: 'mg 3/25/2024 16:23:39'!
PASSED!

!testRun: #CombateTest #test05_CombatienteBando1ViveSiMatoAlBando2 stamp: 'mg 3/25/2024 16:23:39'!
PASSED!

!testRun: #CombateTest #test06_combateTerminaCuandoTodosLosDeUnBandoMueren stamp: 'mg 3/25/2024 16:23:39'!
PASSED!

!testRun: #CombateTest #test06_finalizaCuandoMuereAlgunBando stamp: 'mg 3/25/2024 16:23:39'!
PASSED!
!CombateTest methodsFor: 'as yet unclassified' stamp: 'mg 3/25/2024 16:23:50'!
test07_finalizaCuandoMuereAlgunBando
	|bando1 bando2 combate |
	
	bando1 := {Combatiente new.}.
	bando2 := {Combatiente new. Combatiente new}.
	combate := Combate entre: bando1 y: bando2.
	
	combate desarollar . 
	
	
	bando1 do: [:combatiente | self assert: combatiente estaMuerto ].! !

!methodRemoval: CombateTest #test06_finalizaCuandoMuereAlgunBando stamp: 'mg 3/25/2024 16:23:50'!
test06_finalizaCuandoMuereAlgunBando
	|bando1 bando2 combate |
	
	bando1 := {Combatiente new.}.
	bando2 := {Combatiente new. Combatiente new}.
	combate := Combate entre: bando1 y: bando2.
	
	combate desarollar . 
	
	
	bando1 do: [:combatiente | self assert: combatiente estaMuerto ].!
!CombateTest methodsFor: 'as yet unclassified' stamp: 'mg 3/25/2024 16:24:32'!
test08_xxx
	|bando1 bando2 combate |
	
	bando1 := {Combatiente new.}.
	bando2 := {Combatiente new. Combatiente new}.
	combate := Combate entre: bando1 y: bando2.
	
	combate desarollar . 
	
	
	bando1 do: [:combatiente | self assert: combatiente estaMuerto ].! !
!CombateTest methodsFor: 'as yet unclassified' stamp: 'mg 3/25/2024 16:24:36'!
test05_combatienteBando1ViveSiMatoAlBando2
	|bando1 bando2 combate |
	
	bando1 := {Combatiente new}.
	bando2 := {Combatiente new}.
	
	combate := Combate entre: bando1 y: bando2.
	
	combate desarollar . 
	
	
	self deny: (bando1 first estaMuerto)! !

!methodRemoval: CombateTest #test05_CombatienteBando1ViveSiMatoAlBando2 stamp: 'mg 3/25/2024 16:24:37'!
test05_CombatienteBando1ViveSiMatoAlBando2
	|bando1 bando2 combate |
	
	bando1 := {Combatiente new}.
	bando2 := {Combatiente new}.
	
	combate := Combate entre: bando1 y: bando2.
	
	combate desarollar . 
	
	
	self deny: (bando1 first estaMuerto)!
!CombateTest methodsFor: 'as yet unclassified' stamp: 'mg 3/25/2024 16:26:21' prior: 50530561!
test08_xxx
	|bando1 bando2 combate |	
	
	bando1 := {Combatiente new.}.
	bando2 := {Combatiente new.}.
	combate := Combate entre: bando1 y: bando2.
	
	combate desarollar . 
	
	
	self assert: combate obtenerRondas = 5.! !

!classDefinition: #Combate category: #Ejercicio01 stamp: 'mg 3/25/2024 16:26:44'!
Object subclass: #Combate
	instanceVariableNames: 'primerBando segundoBando rondas'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Ejercicio01'!
!Combate methodsFor: 'nil' stamp: 'mg 3/25/2024 16:26:38'!
obtenerRondas
	^rondas! !

!testRun: #CombateTest #test08_xxx stamp: 'mg 3/25/2024 16:26:56'!
FAILURE!
!Combate methodsFor: 'public' stamp: 'mg 3/25/2024 16:27:26' prior: 50530503!
desarollar
	[
		(primerBando allSatisfy: [:combatiente | combatiente estaMuerto ]) 
		|
		(segundoBando allSatisfy: [:combatiente | combatiente estaMuerto ]) 
	] whileFalse: [
		self desarollarRonda.
		rondas := rondas +1
	]
	
	! !
!Combate methodsFor: 'initialization' stamp: 'mg 3/25/2024 16:27:39' prior: 50530145!
initializeEntre: bando1 y: bando2 
	
	primerBando := bando1.
	segundoBando := bando2.
	
	rondas :=0! !

!testRun: #CombateTest #test08_xxx stamp: 'mg 3/25/2024 16:27:48'!
PASSED!

!testRun: #CombateTest #test01_ataquesCruzados stamp: 'mg 3/25/2024 16:27:48'!
PASSED!

!testRun: #CombateTest #test02_atacanTodosLosCombatientes stamp: 'mg 3/25/2024 16:27:48'!
PASSED!

!testRun: #CombateTest #test03_rondas stamp: 'mg 3/25/2024 16:27:48'!
PASSED!

!testRun: #CombateTest #test04_hastaLaMuerteCombatienteBando2 stamp: 'mg 3/25/2024 16:27:48'!
PASSED!

!testRun: #CombateTest #test05_combatienteBando1ViveSiMatoAlBando2 stamp: 'mg 3/25/2024 16:27:48'!
PASSED!

!testRun: #CombateTest #test06_combateTerminaCuandoTodosLosDeUnBandoMueren stamp: 'mg 3/25/2024 16:27:48'!
PASSED!

!testRun: #CombateTest #test07_finalizaCuandoMuereAlgunBando stamp: 'mg 3/25/2024 16:27:48'!
PASSED!

!testRun: #CombateTest #test08_xxx stamp: 'mg 3/25/2024 16:27:48'!
PASSED!
!CombateTest methodsFor: 'as yet unclassified' stamp: 'mg 3/25/2024 16:27:54'!
test08_obtenerRondas
	|bando1 bando2 combate |	
	
	bando1 := {Combatiente new.}.
	bando2 := {Combatiente new.}.
	combate := Combate entre: bando1 y: bando2.
	
	combate desarollar . 
	
	
	self assert: combate obtenerRondas = 5.! !

!methodRemoval: CombateTest #test08_xxx stamp: 'mg 3/25/2024 16:28:02'!
test08_xxx
	|bando1 bando2 combate |	
	
	bando1 := {Combatiente new.}.
	bando2 := {Combatiente new.}.
	combate := Combate entre: bando1 y: bando2.
	
	combate desarollar . 
	
	
	self assert: combate obtenerRondas = 5.!
!CombateTest methodsFor: 'as yet unclassified' stamp: 'mg 3/25/2024 16:28:23'!
test08_obtenerGanador
	|bando1 bando2 combate ganador |	
	
	bando1 := {Combatiente new.}.
	bando2 := {Combatiente new.}.
	combate := Combate entre: bando1 y: bando2.
	
	ganador := combate desarollar . 
	
	
	self assert: combate obtenerRondas = 5.! !
!CombateTest methodsFor: 'as yet unclassified' stamp: 'mg 3/25/2024 16:28:36' prior: 50530681!
test08_obtenerGanador
	|bando1 bando2 combate ganador |	
	
	bando1 := {Combatiente new.}.
	bando2 := {Combatiente new.}.
	combate := Combate entre: bando1 y: bando2.
	
	ganador := combate desarollar . 
	
	
	self assert: ganador = bando1! !

!testRun: #CombateTest #test08_obtenerGanador stamp: 'mg 3/25/2024 16:28:41'!
FAILURE!
!CombateTest methodsFor: 'as yet unclassified' stamp: 'mg 3/25/2024 16:28:59'!
test09_obtenerGanador
	|bando1 bando2 combate ganador |	
	
	bando1 := {Combatiente new.}.
	bando2 := {Combatiente new.}.
	combate := Combate entre: bando1 y: bando2.
	
	ganador := combate desarollar . 
	
	
	self assert: ganador = bando1! !

!methodRemoval: CombateTest #test08_obtenerGanador stamp: 'mg 3/25/2024 16:28:59'!
test08_obtenerGanador
	|bando1 bando2 combate ganador |	
	
	bando1 := {Combatiente new.}.
	bando2 := {Combatiente new.}.
	combate := Combate entre: bando1 y: bando2.
	
	ganador := combate desarollar . 
	
	
	self assert: ganador = bando1!
!Combate methodsFor: 'public' stamp: 'mg 3/25/2024 16:30:31' prior: 50530618!
desarollar
	[
		(primerBando allSatisfy: [:combatiente | combatiente estaMuerto ]) 
		|
		(segundoBando allSatisfy: [:combatiente | combatiente estaMuerto ]) 
	] whileFalse: [
		self desarollarRonda.
		rondas := rondas +1
	].

	(primerBando allSatisfy: [:combatiente | combatiente estaMuerto ]) ifTrue: [^segundoBando ] ifFalse: [^primerBando]
	
	! !
!Combate methodsFor: 'public' stamp: 'mg 3/25/2024 16:31:14' prior: 50530726!
desarollar
	[
		(primerBando allSatisfy: [:combatiente | combatiente estaMuerto ]) 
		|
		(segundoBando allSatisfy: [:combatiente | combatiente estaMuerto ]) 
	] whileFalse: [
		self desarollarRonda.
		rondas := rondas +1
	].

	(primerBando allSatisfy: [:combatiente | combatiente estaMuerto ])
		ifTrue: [^segundoBando ]
		ifFalse: [^primerBando]
	
	! !
!Combate methodsFor: 'public' stamp: 'mg 3/25/2024 16:32:07'!
estaMuerto

	^ primerBando allSatisfy: [:combatiente | combatiente estaMuerto ]! !
!Combate methodsFor: 'public' stamp: 'mg 3/25/2024 16:32:08' prior: 50530740!
desarollar
	[
		(self estaMuerto) 
		|
		(segundoBando allSatisfy: [:combatiente | combatiente estaMuerto ]) 
	] whileFalse: [
		self desarollarRonda.
		rondas := rondas +1
	].

	(primerBando allSatisfy: [:combatiente | combatiente estaMuerto ])
		ifTrue: [^segundoBando ]
		ifFalse: [^primerBando]
	
	! !
!Combate methodsFor: 'public' stamp: 'mg 3/25/2024 16:32:08' prior: 50530760!
desarollar
	[
		(self estaMuerto) 
		|
		(segundoBando allSatisfy: [:combatiente | combatiente estaMuerto ]) 
	] whileFalse: [
		self desarollarRonda.
		rondas := rondas +1
	].

	(self estaMuerto)
		ifTrue: [^segundoBando ]
		ifFalse: [^primerBando]
	
	! !
!Combate methodsFor: 'public' stamp: 'mg 3/25/2024 16:32:18'!
estaMuerto: bando

	^ bando allSatisfy: [:combatiente | combatiente estaMuerto ]! !

!methodRemoval: Combate #estaMuerto stamp: 'mg 3/25/2024 16:32:22'!
estaMuerto

	^ primerBando allSatisfy: [:combatiente | combatiente estaMuerto ]!
!Combate methodsFor: 'public' stamp: 'mg 3/25/2024 16:33:26' prior: 50530773!
desarollar
	[ (self estaMuerto: primerBando	)	| (self estaMuerto: segundoBando)	] whileFalse: [
		self desarollarRonda.
		rondas := rondas +1
	].

	(self estaMuerto)
		ifTrue: [^segundoBando ]
		ifFalse: [^primerBando]
	
	! !
!Combate methodsFor: 'public' stamp: 'mg 3/25/2024 16:33:36' prior: 50530793!
desarollar
	[ (self estaMuerto: primerBando	)	| (self estaMuerto: segundoBando)	] 
		whileFalse: [
			self desarollarRonda.
			rondas := rondas +1
		].

	(self estaMuerto)
		ifTrue: [^segundoBando ]
		ifFalse: [^primerBando]
	
	! !
!Combate methodsFor: 'public' stamp: 'mg 3/25/2024 16:33:47' prior: 50530803!
desarollar
	[ (self estaMuerto: primerBando	)	| (self estaMuerto: segundoBando)	] 
		whileFalse: [
			self desarollarRonda.
			rondas := rondas +1
		].

	(self estaMuerto: primerBando	)
		ifTrue: [^segundoBando ]
		ifFalse: [^primerBando]
	
	! !

!testRun: #CombateTest #test09_obtenerGanador stamp: 'mg 3/25/2024 16:33:54'!
PASSED!

!testRun: #CombateTest #test01_ataquesCruzados stamp: 'mg 3/25/2024 16:33:54'!
PASSED!

!testRun: #CombateTest #test02_atacanTodosLosCombatientes stamp: 'mg 3/25/2024 16:33:54'!
PASSED!

!testRun: #CombateTest #test03_rondas stamp: 'mg 3/25/2024 16:33:54'!
PASSED!

!testRun: #CombateTest #test04_hastaLaMuerteCombatienteBando2 stamp: 'mg 3/25/2024 16:33:55'!
PASSED!

!testRun: #CombateTest #test05_combatienteBando1ViveSiMatoAlBando2 stamp: 'mg 3/25/2024 16:33:55'!
PASSED!

!testRun: #CombateTest #test06_combateTerminaCuandoTodosLosDeUnBandoMueren stamp: 'mg 3/25/2024 16:33:55'!
PASSED!

!testRun: #CombateTest #test07_finalizaCuandoMuereAlgunBando stamp: 'mg 3/25/2024 16:33:55'!
PASSED!

!testRun: #CombateTest #test08_obtenerRondas stamp: 'mg 3/25/2024 16:33:55'!
PASSED!

!testRun: #CombateTest #test09_obtenerGanador stamp: 'mg 3/25/2024 16:33:55'!
PASSED!
!CombateTest methodsFor: 'as yet unclassified' stamp: 'mg 3/25/2024 16:39:24'!
test10_cuanBienGano
	|bando1 bando2 combate promedio |	
	
	bando1 := {Combatiente new. Combatiente new.}.
	bando2 := {Combatiente new. }.
	combate := Combate entre: bando1 y: bando2.
	
	combate desarollar . 
	
	promedio  := combate promedioVidaGanador
	
	
	self assert: promedio = 16! !
!Combate methodsFor: 'nil' stamp: 'mg 3/25/2024 16:40:41'!
anali! !
!CombateTest methodsFor: 'as yet unclassified' stamp: 'mg 3/25/2024 16:40:49'!
test10_promedioVidaGanador
	|bando1 bando2 combate promedio |	
	
	bando1 := {Combatiente new. Combatiente new.}.
	bando2 := {Combatiente new. }.
	combate := Combate entre: bando1 y: bando2.
	
	combate desarollar . 
	
	promedio  := combate promedioVidaGanador
	
	
	self assert: promedio = 16! !

!methodRemoval: CombateTest #test10_cuanBienGano stamp: 'mg 3/25/2024 16:40:52'!
test10_cuanBienGano
	|bando1 bando2 combate promedio |	
	
	bando1 := {Combatiente new. Combatiente new.}.
	bando2 := {Combatiente new. }.
	combate := Combate entre: bando1 y: bando2.
	
	combate desarollar . 
	
	promedio  := combate promedioVidaGanador
	
	
	self assert: promedio = 16!
!Combate methodsFor: 'as yet unclassified' stamp: 'mg 3/25/2024 16:40:57'!
promedioVidaGanador! !

!methodRemoval: Combate #anali stamp: 'mg 3/25/2024 16:40:58'!
anali!
!Combate methodsFor: 'as yet unclassified' stamp: 'mg 3/25/2024 16:41:56' prior: 50530892!
promedioVidaGanador

	(self estaMuerto: primerBando) ifTrue: [].
	(self estaMuerto: segundoBando) ifTrue: [].! !
!Combate methodsFor: 'as yet unclassified' stamp: 'mg 3/25/2024 16:43:44' prior: 50530898!
promedioVidaGanador

	(self estaMuerto: primerBando) ifTrue: [
		^primerBando average: [:combatiente | ^20 - combatiente dañoRecibido ]
		].
	(self estaMuerto: segundoBando) ifTrue: [].! !
!Combate methodsFor: 'as yet unclassified' stamp: 'mg 3/25/2024 16:44:07' prior: 50530905!
promedioVidaGanador

	(self estaMuerto: primerBando) ifTrue: [
		^primerBando average: [:combatiente | ^20 - combatiente dañoRecibido ]
		].
	(self estaMuerto: segundoBando) ifTrue: [
		^segundoBando average: [:combatiente | ^20 - combatiente dañoRecibido ]
		].! !
!CombatientesTest methodsFor: 'tests-combatir' stamp: 'mg 3/25/2024 16:44:40'!
test_11_ObtenerVida

	| david goliat |
	david := Combatiente new.
	goliat := Combatiente new.
	david asignarEnemigos: {goliat}.

	2 timesRepeat: [
    		david atacar.
	].
	
	goliat asignarEnemigos: {david}.
	goliat atacar.
	
	self assert: david estaSano
! !
!CombatientesTest methodsFor: 'tests-combatir' stamp: 'mg 3/25/2024 16:45:41' prior: 50530925!
test_11_ObtenerVida

	| david goliat |
	david := Combatiente new.
	goliat := Combatiente new.
	david asignarEnemigos: {goliat}.

	2 timesRepeat: [
    		david atacar.
	].	
	self assert: (goliat  = 12)
! !
!CombatientesTest methodsFor: 'tests-combatir' stamp: 'mg 3/25/2024 16:46:01' prior: 50530937!
test_11_ObtenerVida

	| david goliat |
	david := Combatiente new.
	goliat := Combatiente new.
	david asignarEnemigos: {goliat}.

	2 timesRepeat: [
    		david atacar.
	].	
	self assert: (goliat vidaActual  = 12)
! !

!testRun: #CombatientesTest #test_11_ObtenerVida stamp: 'mg 3/25/2024 16:46:06'!
ERROR!
!Combatiente methodsFor: 'public' stamp: 'mg 3/25/2024 16:46:14'!
vidaActual
	self shouldBeImplemented.! !
!Combatiente methodsFor: 'public' stamp: 'mg 3/25/2024 16:46:38' prior: 50530959!
vidaActual
	^20 - self dañoRecibido! !

!testRun: #CombatientesTest #test_11_ObtenerVida stamp: 'mg 3/25/2024 16:46:44'!
PASSED!

!testRun: #CombatientesTest #test01PuedoDefinirleUnaEstrategiaADavid stamp: 'mg 3/25/2024 16:46:44'!
PASSED!

!testRun: #CombatientesTest #test02EnfocarseEnElMasSanoAtacaAlMenosDañado stamp: 'mg 3/25/2024 16:46:44'!
PASSED!

!testRun: #CombatientesTest #test03EnfocarseEnElMasSanoAtacaAlMenosDañadoNoImportaElOrden stamp: 'mg 3/25/2024 16:46:44'!
PASSED!

!testRun: #CombatientesTest #test04EnfocarseEnElMasHeridoAtacaAlMasDañado stamp: 'mg 3/25/2024 16:46:44'!
PASSED!

!testRun: #CombatientesTest #test05NoSeEnfocaSiEstaMuerto stamp: 'mg 3/25/2024 16:46:44'!
PASSED!

!testRun: #CombatientesTest #test_01_GoliatEmpiezaSano stamp: 'mg 3/25/2024 16:46:44'!
PASSED!

!testRun: #CombatientesTest #test_02_GoliatNoEstaSanoSiRecibeDaño stamp: 'mg 3/25/2024 16:46:44'!
PASSED!

!testRun: #CombatientesTest #test_03_CuandoSeDañaAAlguienEsPorUnaCantidadDeDaño stamp: 'mg 3/25/2024 16:46:44'!
PASSED!

!testRun: #CombatientesTest #test_04_CuandoSeDañaAAlguienEsPorUnaCantidadDeDaño stamp: 'mg 3/25/2024 16:46:44'!
PASSED!

!testRun: #CombatientesTest #test_05_GoliatPuedeRecibirDañoMultiplesVeces stamp: 'mg 3/25/2024 16:46:44'!
PASSED!

!testRun: #CombatientesTest #test_06_DavidPuedeAtacarAAlguien stamp: 'mg 3/25/2024 16:46:44'!
PASSED!

!testRun: #CombatientesTest #test_07_DavidPuedeAtacarEnemigosAsignados stamp: 'mg 3/25/2024 16:46:44'!
PASSED!

!testRun: #CombatientesTest #test_08_DavidNoAtacaAUnEnemigoNoAsignado stamp: 'mg 3/25/2024 16:46:44'!
PASSED!

!testRun: #CombatientesTest #test_09_MuereCuandoRecibe20DeDaño stamp: 'mg 3/25/2024 16:46:44'!
PASSED!

!testRun: #CombatientesTest #test_10_NoAtacaSiEstaMuerto stamp: 'mg 3/25/2024 16:46:44'!
PASSED!

!testRun: #CombatientesTest #test_11_ObtenerVida stamp: 'mg 3/25/2024 16:46:44'!
PASSED!
!Combate methodsFor: 'as yet unclassified' stamp: 'mg 3/25/2024 16:47:05' prior: 50530914!
promedioVidaGanador

	(self estaMuerto: primerBando) ifTrue: [
		^primerBando average: [:combatiente | ^combatiente  vidaActual ]
		].
	(self estaMuerto: segundoBando) ifTrue: [
		^segundoBando average: [:combatiente | ^20 - combatiente dañoRecibido ]
		].! !
!Combate methodsFor: 'as yet unclassified' stamp: 'mg 3/25/2024 16:47:09' prior: 50531025!
promedioVidaGanador

	(self estaMuerto: primerBando) ifTrue: [
		^primerBando average: [:combatiente | ^combatiente  vidaActual ]
		].
	(self estaMuerto: segundoBando) ifTrue: [
		^segundoBando average: [:combatiente | ^combatiente  vidaActual ]
		].! !
!Combatiente methodsFor: 'public' stamp: 'mg 3/25/2024 16:47:26' prior: 50530301!
estaMuerto
	^self vida = 0. ! !
!CombateTest methodsFor: 'as yet unclassified' stamp: 'mg 3/25/2024 16:48:17' prior: 50530868!
test10_promedioVidaGanador
	|bando1 bando2 combate |	
	
	bando1 := {Combatiente new. Combatiente new.}.
	bando2 := {Combatiente new. }.
	combate := Combate entre: bando1 y: bando2.
	
	combate desarollar . 	
	
	self assert: combate promedioVidaGanador = 16.! !

!testRun: #CombateTest #test10_promedioVidaGanador stamp: 'mg 3/25/2024 16:48:31'!
ERROR!
!Combatiente methodsFor: 'public' stamp: 'mg 3/25/2024 16:48:48' prior: 50531047!
estaMuerto
	^self vidaActual = 0. ! !

!testRun: #CombateTest #test10_promedioVidaGanador stamp: 'mg 3/25/2024 16:48:53'!
FAILURE!
!Combate methodsFor: 'as yet unclassified' stamp: 'mg 3/25/2024 16:49:26' prior: 50531036!
promedioVidaGanador

	(self estaMuerto: primerBando) ifTrue: [
		^segundoBando average: [:combatiente | ^combatiente  vidaActual ]
		].
	(self estaMuerto: segundoBando) ifTrue: [
		^primerBando average: [:combatiente | ^combatiente  vidaActual ]
		].! !

!testRun: #CombateTest #test10_promedioVidaGanador stamp: 'mg 3/25/2024 16:49:31'!
PASSED!

!testRun: #CombateTest #test01_ataquesCruzados stamp: 'mg 3/25/2024 16:49:31'!
PASSED!

!testRun: #CombateTest #test02_atacanTodosLosCombatientes stamp: 'mg 3/25/2024 16:49:31'!
PASSED!

!testRun: #CombateTest #test03_rondas stamp: 'mg 3/25/2024 16:49:31'!
PASSED!

!testRun: #CombateTest #test04_hastaLaMuerteCombatienteBando2 stamp: 'mg 3/25/2024 16:49:31'!
PASSED!

!testRun: #CombateTest #test05_combatienteBando1ViveSiMatoAlBando2 stamp: 'mg 3/25/2024 16:49:31'!
PASSED!

!testRun: #CombateTest #test06_combateTerminaCuandoTodosLosDeUnBandoMueren stamp: 'mg 3/25/2024 16:49:31'!
PASSED!

!testRun: #CombateTest #test07_finalizaCuandoMuereAlgunBando stamp: 'mg 3/25/2024 16:49:31'!
PASSED!

!testRun: #CombateTest #test08_obtenerRondas stamp: 'mg 3/25/2024 16:49:31'!
PASSED!

!testRun: #CombateTest #test09_obtenerGanador stamp: 'mg 3/25/2024 16:49:32'!
PASSED!

!testRun: #CombateTest #test10_promedioVidaGanador stamp: 'mg 3/25/2024 16:49:32'!
PASSED!
!Combate methodsFor: 'nil' stamp: 'mg 3/25/2024 16:51:01'!
ganador
	! !
!Combate methodsFor: 'public' stamp: 'mg 3/25/2024 16:51:22' prior: 50530813!
desarollar
	[ (self estaMuerto: primerBando	)	| (self estaMuerto: segundoBando)	] 
		whileFalse: [
			self desarollarRonda.
			rondas := rondas +1
		].

	^self ganador
	
	! !
!Combate methodsFor: 'as yet unclassified' stamp: 'mg 3/25/2024 16:51:45' prior: 50531115!
ganador
	(self estaMuerto: primerBando	)
		ifTrue: [^segundoBando ].
		
	(self estaMuerto: primerBando	)
		ifTrue: [^primerBando ]		! !
!Combate methodsFor: 'as yet unclassified' stamp: 'mg 3/25/2024 16:51:58' prior: 50531127!
ganador
	(self estaMuerto: primerBando	)
		ifTrue: [^segundoBando ].
		
	(self estaMuerto: segundoBando	)
		ifTrue: [^primerBando ]		! !
!Combate methodsFor: 'as yet unclassified' stamp: 'mg 3/25/2024 16:52:28' prior: 50531072!
promedioVidaGanador
	^self ganador average: [:combatiente | ^combatiente  vidaActual ]! !
!Combate methodsFor: 'as yet unclassified' stamp: 'mg 3/25/2024 16:52:58' prior: 50531143!
promedioVidaGanador
	
	self ganador = nil ifTrue: [^self].

	^self ganador average: [:combatiente | ^combatiente  vidaActual ]! !
!Combate methodsFor: 'as yet unclassified' stamp: 'mg 3/25/2024 16:53:27' prior: 50531149!
promedioVidaGanador
	
	self ganador = nil ifTrue: [^self].
	^self ganador average: [:combatiente | ^combatiente  vidaActual ]! !
!Combate methodsFor: 'as yet unclassified' stamp: 'mg 3/25/2024 16:53:32' prior: 50531156!
promedioVidaGanador
	
	self ganador = nil ifTrue: [^self].
	
	^self ganador average: [:combatiente | ^combatiente  vidaActual ]! !

!testRun: #CombatientesTest #test_11_ObtenerVida stamp: 'mg 3/25/2024 16:53:38'!
PASSED!

!testRun: #CombatientesTest #test01PuedoDefinirleUnaEstrategiaADavid stamp: 'mg 3/25/2024 16:53:38'!
PASSED!

!testRun: #CombatientesTest #test02EnfocarseEnElMasSanoAtacaAlMenosDañado stamp: 'mg 3/25/2024 16:53:39'!
PASSED!

!testRun: #CombatientesTest #test03EnfocarseEnElMasSanoAtacaAlMenosDañadoNoImportaElOrden stamp: 'mg 3/25/2024 16:53:39'!
PASSED!

!testRun: #CombatientesTest #test04EnfocarseEnElMasHeridoAtacaAlMasDañado stamp: 'mg 3/25/2024 16:53:39'!
PASSED!

!testRun: #CombatientesTest #test05NoSeEnfocaSiEstaMuerto stamp: 'mg 3/25/2024 16:53:39'!
PASSED!

!testRun: #CombatientesTest #test_01_GoliatEmpiezaSano stamp: 'mg 3/25/2024 16:53:39'!
PASSED!

!testRun: #CombatientesTest #test_02_GoliatNoEstaSanoSiRecibeDaño stamp: 'mg 3/25/2024 16:53:39'!
PASSED!

!testRun: #CombatientesTest #test_03_CuandoSeDañaAAlguienEsPorUnaCantidadDeDaño stamp: 'mg 3/25/2024 16:53:39'!
PASSED!

!testRun: #CombatientesTest #test_04_CuandoSeDañaAAlguienEsPorUnaCantidadDeDaño stamp: 'mg 3/25/2024 16:53:39'!
PASSED!

!testRun: #CombatientesTest #test_05_GoliatPuedeRecibirDañoMultiplesVeces stamp: 'mg 3/25/2024 16:53:39'!
PASSED!

!testRun: #CombatientesTest #test_06_DavidPuedeAtacarAAlguien stamp: 'mg 3/25/2024 16:53:39'!
PASSED!

!testRun: #CombatientesTest #test_07_DavidPuedeAtacarEnemigosAsignados stamp: 'mg 3/25/2024 16:53:39'!
PASSED!

!testRun: #CombatientesTest #test_08_DavidNoAtacaAUnEnemigoNoAsignado stamp: 'mg 3/25/2024 16:53:39'!
PASSED!

!testRun: #CombatientesTest #test_09_MuereCuandoRecibe20DeDaño stamp: 'mg 3/25/2024 16:53:39'!
PASSED!

!testRun: #CombatientesTest #test_10_NoAtacaSiEstaMuerto stamp: 'mg 3/25/2024 16:53:39'!
PASSED!

!testRun: #CombatientesTest #test_11_ObtenerVida stamp: 'mg 3/25/2024 16:53:39'!
PASSED!